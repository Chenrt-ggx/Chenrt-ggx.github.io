<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="922px" height="582px" viewBox="-0.5 -0.5 922 582" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-04-04T07:19:36.800Z&quot; agent=&quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36&quot; etag=&quot;wt2V0c6SziAPysYe2ARl&quot; version=&quot;17.4.0&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><clipPath id="mx-clip-4-341-212-26-0"><rect x="4" y="341" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-367-212-26-0"><rect x="4" y="367" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-393-212-26-0"><rect x="4" y="393" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-427-212-26-0"><rect x="4" y="427" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-453-212-26-0"><rect x="4" y="453" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-479-212-26-0"><rect x="4" y="479" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-505-212-26-0"><rect x="4" y="505" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-531-212-26-0"><rect x="4" y="531" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-557-212-26-0"><rect x="4" y="557" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-31-212-26-0"><rect x="4" y="31" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-57-212-26-0"><rect x="4" y="57" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-91-212-26-0"><rect x="4" y="91" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-117-212-26-0"><rect x="4" y="117" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-143-212-26-0"><rect x="4" y="143" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-169-212-26-0"><rect x="4" y="169" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-195-212-26-0"><rect x="4" y="195" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-221-212-26-0"><rect x="4" y="221" width="212" height="26"/></clipPath><clipPath id="mx-clip-4-247-212-26-0"><rect x="4" y="247" width="212" height="26"/></clipPath><clipPath id="mx-clip-304-81-612-26-0"><rect x="304" y="81" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-107-612-26-0"><rect x="304" y="107" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-133-612-26-0"><rect x="304" y="133" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-159-612-26-0"><rect x="304" y="159" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-193-612-26-0"><rect x="304" y="193" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-219-612-26-0"><rect x="304" y="219" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-245-612-26-0"><rect x="304" y="245" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-271-612-26-0"><rect x="304" y="271" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-297-612-26-0"><rect x="304" y="297" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-323-612-26-0"><rect x="304" y="323" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-349-612-26-0"><rect x="304" y="349" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-375-612-26-0"><rect x="304" y="375" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-401-612-26-0"><rect x="304" y="401" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-427-612-26-0"><rect x="304" y="427" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-453-612-26-0"><rect x="304" y="453" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-479-612-26-0"><rect x="304" y="479" width="612" height="26"/></clipPath><clipPath id="mx-clip-304-505-612-26-0"><rect x="304" y="505" width="612" height="26"/></clipPath></defs><g><path d="M 110 310 L 110 276.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 110 271.12 L 113.5 278.12 L 110 276.37 L 106.5 278.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 0 336 L 0 310 L 220 310 L 220 336" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 0 336 L 0 580 L 220 580 L 220 336" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 336 L 220 336" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-style="italic" pointer-events="none" text-anchor="middle" font-size="12px"><text x="109.5" y="327.5">Node</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-341-212-26-0)" font-size="12px"><text x="5.5" y="353.5">- int len</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-367-212-26-0)" font-size="12px"><text x="5.5" y="379.5">- int status</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-393-212-26-0)" font-size="12px"><text x="5.5" y="405.5">- char* word</text></g><path d="M 0 418 L 220 418" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-427-212-26-0)" font-size="12px"><text x="5.5" y="439.5">+ Node(int len, char* word)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-453-212-26-0)" font-size="12px"><text x="5.5" y="465.5">+ int get_len()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-479-212-26-0)" font-size="12px"><text x="5.5" y="491.5">+ char* get_word()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-505-212-26-0)" font-size="12px"><text x="5.5" y="517.5">+ int get_status()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-531-212-26-0)" font-size="12px"><text x="5.5" y="543.5">+ void set_status(int status)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-557-212-26-0)" font-size="12px"><text x="5.5" y="569.5">+ bool operator==(const Node&amp; rhs)</text></g><path d="M 0 26 L 0 0 L 220 0 L 220 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 26 L 0 270 L 220 270 L 220 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 26 L 220 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-style="italic" pointer-events="none" text-anchor="middle" font-size="12px"><text x="109.5" y="17.5">Chain</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-31-212-26-0)" font-size="12px"><text x="5.5" y="43.5">- int char_len</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-57-212-26-0)" font-size="12px"><text x="5.5" y="69.5">- vector&lt;Node*&gt; word_vector</text></g><path d="M 0 82 L 220 82" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-91-212-26-0)" font-size="12px"><text x="5.5" y="103.5">+ Chain()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-117-212-26-0)" font-size="12px"><text x="5.5" y="129.5">+ char* at(int index)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-143-212-26-0)" font-size="12px"><text x="5.5" y="155.5">+ int get_word_len()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-169-212-26-0)" font-size="12px"><text x="5.5" y="181.5">+ int get_char_len()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-195-212-26-0)" font-size="12px"><text x="5.5" y="207.5">+ void push_back(Node* word)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-221-212-26-0)" font-size="12px"><text x="5.5" y="233.5">+ void pop_back()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-247-212-26-0)" font-size="12px"><text x="5.5" y="259.5">+ string to_string()</text></g><path d="M 300 76 L 300 50 L 920 50 L 920 76" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 76 L 300 530 L 920 530 L 920 76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 300 76 L 920 76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-style="italic" pointer-events="none" text-anchor="middle" font-size="12px"><text x="609.5" y="67.5">Core</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-81-612-26-0)" font-size="12px"><text x="305.5" y="93.5">- int status[26]</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-107-612-26-0)" font-size="12px"><text x="305.5" y="119.5">- vector&lt;Node&gt; graph[26][26]</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-133-612-26-0)" font-size="12px"><text x="305.5" y="145.5">- int result_count</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-159-612-26-0)" font-size="12px"><text x="305.5" y="171.5">- vector&lt;string&gt; result_storage</text></g><path d="M 300 184 L 920 184" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-193-612-26-0)" font-size="12px"><text x="305.5" y="205.5">- void build_graph(char* words[], int word_count)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-219-612-26-0)" font-size="12px"><text x="305.5" y="231.5">- bool check_cycle_dfs(int now)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-245-612-26-0)" font-size="12px"><text x="305.5" y="257.5">- bool check_cycle()</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-271-612-26-0)" font-size="12px"><text x="305.5" y="283.5">- void replace_max_chain(Chain&amp; chain, Chain&amp; max_chain, bool by_word)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-297-612-26-0)" font-size="12px"><text x="305.5" y="309.5">- void gen_chain_dfs(int now, Chain&amp; chain, Chain&amp; max_chain, char end, bool by_word)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-323-612-26-0)" font-size="12px"><text x="305.5" y="335.5">- int abstract_gen_chain(char* words[], int len, char* result[], char head, char tail, bool enable_loop, bool by_word)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-349-612-26-0)" font-size="12px"><text x="305.5" y="361.5">+ int gen_chain_word(char* words[], int len, char* result[], char head, char tail, bool enable_loop)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-375-612-26-0)" font-size="12px"><text x="305.5" y="387.5">+ int gen_chain_char(char* words[], int len, char* result[], char head, char tail, bool enable_loop)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-401-612-26-0)" font-size="12px"><text x="305.5" y="413.5">- void output_chain(Chain&amp; chain)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-427-612-26-0)" font-size="12px"><text x="305.5" y="439.5">- void chains_all_dfs(int now, Chain&amp; chain)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-453-612-26-0)" font-size="12px"><text x="305.5" y="465.5">+ int gen_chains_all(char* words[], int len, char* result[])</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-479-612-26-0)" font-size="12px"><text x="305.5" y="491.5">- void chain_word_unique_dfs(int now, Chain&amp; chain, Chain&amp; max_chain)</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-304-505-612-26-0)" font-size="12px"><text x="305.5" y="517.5">+ int gen_chain_word_unique(char* words[], int len, char* result[])</text></g><path d="M 220 151 L 259.96 151 L 259.96 305 L 293.63 305" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 298.88 305 L 291.88 308.5 L 293.63 305 L 291.88 301.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 220 461 L 259.96 461 L 259.96 305 L 293.63 305" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 298.88 305 L 291.88 308.5 L 293.63 305 L 291.88 301.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g></svg>