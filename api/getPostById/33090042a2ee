{"id":"33090042a2ee","title":"一种针对 TCP 协议的低速率拒绝服务攻击","created":"2022-07-05T17:15:37.000Z","updated":"2022-07-05T17:15:37.000Z","raw":"<p>[迁移自博客园] | BUAA Computer Science Methodology 2022 Report</p>\n<span id=\"more\"></span>\n<h2 id=\"说明及绪论\"><a class=\"markdownIt-Anchor\" href=\"#说明及绪论\"></a> 说明及绪论</h2>\n<p>主要基于论文 Low-Rate TCP-Targeted Denial of Service Attacks，参考了其它文献。</p>\n<ul>\n<li>\n<p>摘要：</p>\n<p>拒绝服务攻击对全球网络基础设施构成了越来越大的安全威胁。虽然 TCP 协议的拥塞控制机制对不同网络条件具有很强鲁棒性，但与终端系统合作的隐含假设导致了其对高速率拒绝服务攻击的脆弱性。尽管高速率拒绝服务攻击破坏性大，其引起的统计异常使其易于检测和防范。本文提出了一种以 TCP 协议为攻击目标、针对其超时重传机制和拥塞控制机制的低速率拒绝服务攻击方式。攻击者通过短时间大量发包的方式造成数据包丢失，使 TCP 流进入超时状态，等待 TCP 流退出超时状态后再次短时间大量发包，进而使 TCP 流始终难以摆脱超时状态，吞吐量降低至零，且平均发送速率低，不易被检测到。本文通过模拟表明低速率拒绝服务攻击是有效的，且无法被现有的监测机制发现，并通过本地和广域网环境中的实验证实，远程攻击者可以极大地减少 TCP 吞吐量，即对 TCP 协议的低速率拒绝服务攻击是广泛且有效的，对当今互联网是一种现实的威胁。</p>\n</li>\n<li>\n<p>关键词：</p>\n<ul>\n<li>互联网。</li>\n<li>计算机网络。</li>\n<li>TCP 协议。</li>\n<li>拒绝服务攻击。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"研究背景与问题描述\"><a class=\"markdownIt-Anchor\" href=\"#研究背景与问题描述\"></a> 研究背景与问题描述</h2>\n<p>在本文之前，TCP 协议经过较长时间发展，可通过确认与超时重传、流量控制、拥塞控制等机制提供面向连接的、可靠的全双工通信服务。然而 TCP 协议与终端系统合作的隐含假设导致了其对攻击的脆弱性，如 Ping Of Death 攻击利用早期操作系统处理 ICMP 数据包时的漏洞，通过缓存溢出的方式诱发 TCP 协议堆栈崩溃；Land 攻击利用 TCP 协议三次握手过程的缺陷，向目标主机发送源地址和目标地址均为目标主机地址的 SYN 数据包，在主机上建立无效连接以消耗系统资源。</p>\n<p>另一方面，拒绝服务攻击一直是互联网面对的严重威胁之一，攻击者通过向攻击目标发送超出其处理能力的数据，消耗攻击目标有限的资源，致使其无法为合法用户提供服务。如 UDP 泛洪利用 echo 服务自动回复的特性，使开启 echo 服务的主机相互回复数据；SYN 泛洪利用 TCP 协议的三次握手过程中，服务端没有收到 ACK 报文时会重试一段时间的特性，使服务器将大量资源用于维护半连接列表。拒绝服务攻击的高速度性质给网络监控器带来了统计学上的异常因而易于发现，被攻击者可确定发起攻击的 IP 地址，在其外部路由器上对此 IP 地址进行封锁，并通知其 ISP 和上游提供商封锁敌意数据包。</p>\n<p>本文创新性的提出了针对 TCP 协议超时重传和拥塞控制机制的低速率拒绝服务攻击。攻击者通过周期性的突发持续时间短的高速攻击流引起丢包，使 TCP 协议误认为其处于拥堵的网络环境，并降低性能。不同于高速率拒绝服务攻击，低速率拒绝服务攻击只需少量数据即可导致目标系统的服务能力显著下降，难于检测和防范。</p>\n<h2 id=\"解决方法\"><a class=\"markdownIt-Anchor\" href=\"#解决方法\"></a> 解决方法</h2>\n<h3 id=\"针对单一-tcp-流\"><a class=\"markdownIt-Anchor\" href=\"#针对单一-tcp-流\"></a> 针对单一 TCP 流</h3>\n<p>根据 RFC 2988，超时重传时间 RTO 可通过公式 3.1 计算。公式 3.1 中，单一 TCP 流的平滑往返时间 SRTT 可通过公式 3.2 计算，推荐的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span> 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mn>4</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{4}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>；往返时间变化 RTTVAR 可通过公式 3.3 计算，推荐的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span> 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mn>8</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{8}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.190108em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">8</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>；minRTO 为最小重传时间，推荐的 minRTO 为 1s；G 为时钟粒度，一般不超过 100ms。</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>RTO</mtext><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mtext>minRTO</mtext><mo separator=\"true\">,</mo><mtext>SRTT</mtext><mo>+</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mtext>G</mtext><mo separator=\"true\">,</mo><mn>4</mn><mtext>RTTVAR</mtext><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mtext>    </mtext><mo stretchy=\"false\">(</mo><mn>3.1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{RTO}=\\max(\\text{minRTO},\\text{SRTT}+\\max(\\text{G},4\\text{RTTVAR}))\\ \\ \\ \\ (3.1)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">RTO</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">max</span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">minRTO</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord text\"><span class=\"mord\">SRTT</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">max</span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">G</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">4</span><span class=\"mord text\"><span class=\"mord\">RTTVAR</span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>SRTT</mtext><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mtext>SRTT</mtext><mo>+</mo><mi>α</mi><msup><mtext>R</mtext><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mtext>    </mtext><mo stretchy=\"false\">(</mo><mn>3.2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{SRTT}=(1-\\alpha)\\text{SRTT}+\\alpha{\\text{R}&#x27;}\\ \\ \\ \\ (3.2)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">SRTT</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord\">SRTT</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.075122em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.825122em;\"><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>RTTVAR</mtext><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>β</mi><mo stretchy=\"false\">)</mo><mtext>RTTVAR</mtext><mo>+</mo><mi>β</mi><mo stretchy=\"false\">∣</mo><mrow><mtext>SRTT</mtext><mo>−</mo><msup><mtext>R</mtext><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><mo stretchy=\"false\">∣</mo><mtext>    </mtext><mo stretchy=\"false\">(</mo><mn>3.3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{RTTVAR}=(1-\\beta)\\text{RTTVAR}+\\beta\\lvert{\\text{SRTT}-\\text{R}&#x27;}\\rvert\\ \\ \\ \\ (3.3)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">RTTVAR</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mclose\">)</span><span class=\"mord text\"><span class=\"mord\">RTTVAR</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.075122em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mopen\">∣</span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">SRTT</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.825122em;\"><span style=\"top:-3.1362300000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span><span class=\"mclose\">∣</span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>下面以下图为例说明 TCP 协议中 RTO 的变化。TCP 发送方在 t 为 0 时发送数据包并启动一个 1 秒的重传计时器，若数据包丢失且发送方收到不足 3 个确认，在 t 为 1 时计时器到期，TCP 流被认为超时，此时发送方进入指数退避阶段，将拥塞窗口置为 1 并将 RTO 加倍到 2 秒，重发丢失数据包并以新的 RTO 重置重传计时器。若数据包在 t 为 1 时重传成功并在 1 + RTT 时被确认，发送方退出指数退避阶段，将窗口大小加倍为 2，发送两个新数据包并以当前 RTO 重置重传计时器。若发出的两个数据包均没有丢失并在 1 + 2RTT 时得到确认，SRTT、RTTVAR 和 RTO 被重新计算。只要公式 3.4 成立，RTO 再次被设置为 1 秒。</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>minRTO</mtext><mo>&gt;</mo><mtext>SRTT</mtext><mo>+</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mtext>G</mtext><mo separator=\"true\">,</mo><mn>4</mn><mtext>RTTVAR</mtext><mo stretchy=\"false\">)</mo><mtext>    </mtext><mo stretchy=\"false\">(</mo><mn>3.4</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{minRTO}&gt;\\text{SRTT}+\\max(\\text{G},4\\text{RTTVAR})\\ \\ \\ \\ (3.4)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord text\"><span class=\"mord\">minRTO</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord text\"><span class=\"mord\">SRTT</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">max</span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">G</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">4</span><span class=\"mord text\"><span class=\"mord\">RTTVAR</span></span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">4</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<div align=\"center\">\n  <img src=\"/assets/images/buaa-methodology/pic-1.jpg\" width=\"30%\" />\n</div>\n<p>上述超时机制对稳健的拥堵控制至关重要也不可或缺，但这就使攻击者可在 RTT 的尺度上大量发包引发超时，在 RTO 的尺度上沉默，使 TCP 流反复进入超时重传状态，将受害者的吞吐量限制到接近零。如下图中，攻击者通过产生一个短暂的高速率突发在 t 为 0 时创造了一个初始中断，发送方将等待 1 秒的重传定时器过期，然后将其 RTO 加倍。若攻击者在 1 &lt; t &lt; 1 + 2RTT 时制造第二次中断，可迫使发送方再次等待 2 秒。以此类推，攻击者可以通过在 t 为 3, 7, 15… 时构造类似的中断，以拒绝此服务，同时以极低的平均速率进行传输。</p>\n<div align=\"center\">\n  <img src=\"/assets/images/buaa-methodology/pic-2.jpg\" width=\"50%\" />\n</div>\n<h3 id=\"针对多个-tcp-流\"><a class=\"markdownIt-Anchor\" href=\"#针对多个-tcp-流\"></a> 针对多个 TCP 流</h3>\n<p>对于多个 TCP 流，考虑到流量不断到达和离开，且 RFC 2988 建议所有流量使用相同的 minRTO 参数，针对 TCP 聚合的低速率拒绝服务攻击应在 minRTO 的时间尺度上定期突发，如下图所示，这种攻击没有利用 TCP 的指数退避机制，而只是利用了 TCP 的重复超时。</p>\n<div align=\"center\">\n  <img src=\"/assets/images/buaa-methodology/pic-3.jpg\" width=\"40%\" />\n</div>\n<p>考虑单一队列、单一低速率拒绝服务攻击流、多个具有不同 RTT 的长期 TCP 流。对于第 i 个 TCP 流，如果攻击流的突发长度 L 不少于此 TCP 流的 RTT 且最小重传时间满足公式 3.5，在攻击周期为 T 时，该 TCP 流的吞吐量将被限制为公式 3.6。</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>minRTO</mtext><mo>&gt;</mo><msub><mtext>SRTT</mtext><mi>i</mi></msub><mo>+</mo><mn>4</mn><msub><mtext>RTTVAR</mtext><mi>i</mi></msub><mtext>    </mtext><mo stretchy=\"false\">(</mo><mn>3.5</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{minRTO}&gt;\\text{SRTT}_i+4\\text{RTTVAR}_i\\ \\ \\ \\ (3.5)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord text\"><span class=\"mord\">minRTO</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">SRTT</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">4</span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">RTTVAR</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">5</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>ρ</mi><mo stretchy=\"false\">(</mo><mtext>T</mtext><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">⌈</mo><mfrac><mtext>minRTO</mtext><mtext>T</mtext></mfrac><mo stretchy=\"false\">⌉</mo><mtext>T</mtext><mo>−</mo><mtext>minRTO</mtext></mrow><mtext>T</mtext></mfrac><mtext>    </mtext><mo stretchy=\"false\">(</mo><mn>3.6</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\rho(\\text{T})=\\frac{\\lceil\\frac{\\text{minRTO}}{\\text{T}}\\rceil{\\text{T}}-\\text{minRTO}}{\\text{T}}\\ \\ \\ \\ (3.6)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ρ</span><span class=\"mopen\">(</span><span class=\"mord text\"><span class=\"mord\">T</span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.293331em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6073309999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">T</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7350000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">⌈</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.872331em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">T</span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">minRTO</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌉</span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">T</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord text\"><span class=\"mord\">minRTO</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mopen\">(</span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">6</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>由于攻击者可以使满足条件的所有 TCP 流进入超时，这些 TCP 流具有相同的 RTO 值，因此尽管这些 TCP 流的往返时间各不相同，所有 TCP 流都被迫与攻击者“同步”，即在几乎同一时间进入和退出超时。</p>\n<h2 id=\"实验验证及结论\"><a class=\"markdownIt-Anchor\" href=\"#实验验证及结论\"></a> 实验验证及结论</h2>\n<h3 id=\"模拟验证\"><a class=\"markdownIt-Anchor\" href=\"#模拟验证\"></a> 模拟验证</h3>\n<p>本文通过模拟验证了上述模型的正确性，理论分析的吞吐量和实际测得的吞吐量如下图所示，在 T 为 minRTO/2 和 T 为 minRTO 时吞吐量被限制到接近零。而在 minRTO/2 到 minRTO 之间，实际吞吐量低于理论吞吐量是因为上述模型假定在重传计时器到期到新的突发导致超时之前，TCP 流可以利用全部的链路容量，但实际上由于存在慢启动等机制，TCP 流的吞吐量会更低。</p>\n<div align=\"center\">\n  <img src=\"/assets/images/buaa-methodology/pic-4.jpg\" width=\"45%\" />\n</div>\n<h3 id=\"实验设计\"><a class=\"markdownIt-Anchor\" href=\"#实验设计\"></a> 实验设计</h3>\n<p>本文在互联网进行了实验，从一个 TCP SACK 发送器（TCP-S）下载一个大文件到一个 TCP SACK 接收器（TCP-R），配置 TCP-S 主机的 minRTO 为 1 秒，并使用 iperf 测量 TCP 吞吐量，使用基于 UDP 的主动探测软件发送高精度的攻击流。本文覆盖性的测试了在局域网内、跨局域网和从广域网发起低速率拒绝服务攻击，全部实验进行了三次并取平均值作为结果。</p>\n<div align=\"center\">\n  <img src=\"/assets/images/buaa-methodology/pic-5.jpg\" width=\"35%\" />\n</div>\n<h3 id=\"局域网内实验\"><a class=\"markdownIt-Anchor\" href=\"#局域网内实验\"></a> 局域网内实验</h3>\n<p>在局域网内发起攻击的实验场景如上图所示，TCP-S 和发起攻击的主机 DoS-A 都在同一个 10Mb/s 的以太网局域网上，被攻击的主机 TCP-R 在另一个 10Mb/s 以太网局域网上，与 TCP-S 和 DoS-A 都有两跳距离。方波拒绝服务攻击流的峰值速率为 10Mb/s，突发长度为 200ms。实验结果如下图所示，标记为“Intra-LAN”的曲线表明，T 为 1.2 秒的时间尺度对 TCP 流的吞吐量的破坏性最大，当攻击者在这个时间尺度进行传输时，其平均速率为 1.67Mb/s。没有拒绝服务攻击流，TCP 流可以获得 6.6Mb/s 的吞吐量，有了拒绝服务攻击流，TCP 流获得了 780kb/s 的吞吐量。因此攻击者可以将受害者的吞吐量缩减近一个数量级。</p>\n<h3 id=\"跨局域网实验\"><a class=\"markdownIt-Anchor\" href=\"#跨局域网实验\"></a> 跨局域网实验</h3>\n<p>跨局域网发起攻击的实验场景如上图所示，TCP-S 和发起攻击的主机 DoS-B 在两个不同的 100Mb/s 的以太网局域网上，被攻击的主机 TCP-R 在另一个 10Mb/s 以太网局域网上，彼此之间的路由穿越两个路由器和两个以太网交换机。方波拒绝服务攻击流的峰值速率仍然是 10Mb/s，持续时间与局域网内的情况相比减少到 100ms。实验结果如下图所示，标记为“Inter-LAN”的曲线表明，T 为 1.1 秒的时间尺度对 TCP 流的吞吐量的破坏性最大，此处 TCP 流实现了 800kb/s 的吞吐量，只有它在没有拒绝服务攻击流（9.8Mb/s）的情况下实现的吞吐量的 8.1%。在这个时间尺度上，攻击者的平均速率为 909kb/s。</p>\n<h3 id=\"广域网实验\"><a class=\"markdownIt-Anchor\" href=\"#广域网实验\"></a> 广域网实验</h3>\n<p>从广域网发起攻击的实验场景如上图所示，TCP-S 在一个 100Mb/s 的以太网局域网上，被攻击的主机 TCP-R 在另一个 10Mb/s 以太网局域网上，发起攻击的主机 DoS-C 从瑞士洛桑的一个局域网发起攻击，该局域网距离目的地有 8 跳。方波拒绝服务攻击流的峰值速率与持续时间同上一个实验。实验结果如下图所示，标记为“WAN”的曲线表明，T 为 1.1 秒的时间尺度对 TCP 流的吞吐量的破坏性最大，此处 TCP 流的吞吐量从 9.8Mb/s 降至 1.2Mb/s，而攻击者的平均速率依然为 909kb/s。这表明了远程攻击的可行性，虽然攻击者在到达被攻击者的局域网前已经穿越了本地供应商的网络、多个路由器和以太网交换机，潜在的流量失真使攻击者发出的流量模式偏离了方波，但该攻击依然是有效的。</p>\n<h3 id=\"实验结论\"><a class=\"markdownIt-Anchor\" href=\"#实验结论\"></a> 实验结论</h3>\n<div align=\"center\">\n  <img src=\"/assets/images/buaa-methodology/pic-6.jpg\" width=\"50%\" />\n</div>\n<p>本文通过分析建模、模拟和实验表明，上文提出的低速率拒绝服务攻击能够将 TCP 流节流到其理想速率的一小部分，同时以足够低的平均速率躲避检测，在局域网内、跨局域网和广域网均有效，即针对 TCP 协议的低速率拒绝服务攻击是广泛且有效的，且无论是检测拒绝服务流量，还是实现流量之间公平的丢弃算法，均无法检测也无法防御低速率拒绝服务攻击，因而低速率拒绝服务攻击对当今互联网是一种现实的威胁。</p>\n<h2 id=\"工作总结及后续进展\"><a class=\"markdownIt-Anchor\" href=\"#工作总结及后续进展\"></a> 工作总结及后续进展</h2>\n<h3 id=\"其它低速率拒绝服务攻击\"><a class=\"markdownIt-Anchor\" href=\"#其它低速率拒绝服务攻击\"></a> 其它低速率拒绝服务攻击</h3>\n<p>本文通过重复超时的方式，使 TCP 协议误以为其处于拥堵的网络环境，因而降低性能，并采用周期性方波形式的攻击流，但并未深入研究基于 TCP 协议的其它机制或采用其它形式的攻击流，以使 TCP 协议误以为其处于拥堵的网络环境。在本文之后，Bestavorst 等人提出了利用 TCP 协议的 AIMD 机制降低拥塞窗口的低速率拒绝服务攻击方式；Guirguis 等人给出了本文提出的攻击方式的两种变种，攻击效果下降但是单个攻击包造成的影响更大。</p>\n<p>更进一步的，低速率拒绝服务攻击的思想被应用于 TCP 协议之外，例如针对终端直接访问控制机制的低速率拒绝服务攻击方式；针对路由器主动队列管理机制的低速率拒绝服务攻击方式等。</p>\n<h3 id=\"防御低速率拒绝服务攻击\"><a class=\"markdownIt-Anchor\" href=\"#防御低速率拒绝服务攻击\"></a> 防御低速率拒绝服务攻击</h3>\n<p>本文提出了一种简单的，应对上文提出的低速率拒绝服务攻击的方式，其通过随机化 minRTO 破坏链路状态恢复过程中周期的固定性，可一定程度缓解攻击造成的影响。但由于 TCP 协议需要通过超时重传和拥塞控制等机制实现高性能，以对不同网络条件具备稳健性，所提方法只能一定程度缓解 TCP 流受低速率拒绝服务攻击的影响，由于防御和攻击时间尺度的不匹配，要完全保护系统，就必然要在没有攻击的情况下大量牺牲系统的性能。</p>\n<p>不同于本文基于调整协议的方式防御低速率拒绝服务攻击，后续主要通过检测攻击流特征的方式防御低速率拒绝服务攻击。如 Zhang C 等人提出针对低速率拒绝服务攻击流脉冲高速率的特性，通过路由器弃用高速率流的包；Sun H 等人提出对于数据流采样分析并与设定的攻击特征匹配以检测攻击，进行带宽分配和资源保护；Chen Y 等人提出将到达速率作为时域采样，通过傅里叶变化得到频域序列进行匹配以提高检测准确率；Shewtekar A 等人提出在边界路由器检测低速率拒绝服务攻击，结合 IP 地址溯源进行封锁等。</p>\n","length":"3.9k","time":"15min","categories":["Buaa","Methodology"],"tags":["Network","TCP"]}