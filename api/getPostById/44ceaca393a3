{"id":"44ceaca393a3","title":"网络攻防技术实验作业 | 工具配置与使用篇（下）","created":"2022-05-28T10:33:47.000Z","updated":"2022-05-28T10:33:47.000Z","raw":"<p>[迁移自博客园] | BUAA Web Attack and Defense 2022 Tool Configuration and Use</p>\n<span id=\"more\"></span>\n<h2 id=\"snort-barnyard2-base-的安装与配置\"><a class=\"markdownIt-Anchor\" href=\"#snort-barnyard2-base-的安装与配置\"></a> Snort + Barnyard2 + BASE 的安装与配置</h2>\n<h3 id=\"实验环境\"><a class=\"markdownIt-Anchor\" href=\"#实验环境\"></a> 实验环境</h3>\n<p>在 Ubuntu 20.04 中配置，测试采用了 Kali Linux Rolling x 虚拟机和 Windows10 物理机。</p>\n<h3 id=\"安装与配置-snort\"><a class=\"markdownIt-Anchor\" href=\"#安装与配置-snort\"></a> 安装与配置 Snort</h3>\n<p>安装基本环境：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo apt-get install -y build-essential net-tools\nsudo apt-get install -y libpcap-dev libpcre3-dev libdumbnet-dev\nsudo apt-get install -y bison flex\n</code></pre>\n<p>解压 DAQ 并编译安装：</p>\n<pre class=\"highlight\"><code class=\"plain\">tar -xvzf daq-2.0.7.tar.gz\ncd daq-2.0.7\n./configure\nmake\nsudo make install\n</code></pre>\n<p>安装 Snort 依赖的包：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo apt-get install -y zlib1g-dev liblzma-dev openssl libssl-dev\n</code></pre>\n<p>解压 Snort 并编译安装：</p>\n<pre class=\"highlight\"><code class=\"plain\">tar -xvzf snort-2.9.19.tar.gz\ncd snort-2.9.19\n./configure --enable-sourcefire --disable-open-appid\nmake\nsudo make install\n</code></pre>\n<p>更新与链接共享库：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo ldconfig\nsudo ln -s /usr/local/bin/snort /usr/sbin/snort\n</code></pre>\n<p>简单测试 Snort：</p>\n<pre class=\"highlight\"><code class=\"plain\">snort -V\n</code></pre>\n<img src=\"/assets/images/buaa-security/snort/install-1.png\" width=\"85%\" />\n<p>为 Snort 创建用户和组：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo groupadd snort\nsudo useradd snort -r -s /sbin/nologin -c SNORT_IDS -g snort\n\nsudo mkdir /etc/snort\nsudo mkdir /etc/snort/rules\nsudo mkdir /etc/snort/rules/iplists\nsudo mkdir /etc/snort/preproc_rules\nsudo mkdir /usr/local/lib/snort_dynamicrules\nsudo mkdir /etc/snort/so_rules\n\nsudo touch /etc/snort/rules/iplists/black_list.rules\nsudo touch /etc/snort/rules/iplists/white_list.rules\nsudo touch /etc/snort/rules/local.rules\nsudo touch /etc/snort/sid-msg.map\n\nsudo mkdir /var/log/snort\nsudo mkdir /var/log/snort/archived_logs\n\nsudo chmod -R 5775 /etc/snort\nsudo chmod -R 5775 /var/log/snort\nsudo chmod -R 5775 /var/log/snort/archived_logs\nsudo chmod -R 5775 /etc/snort/so_rules\nsudo chmod -R 5775 /usr/local/lib/snort_dynamicrules\n\nsudo chown -R snort:snort /etc/snort\nsudo chown -R snort:snort /var/log/snort\nsudo chown -R snort:snort /usr/local/lib/snort_dynamicrules\n</code></pre>\n<p>复制配置文件和预处理器：</p>\n<pre class=\"highlight\"><code class=\"plain\">cd ~/snort-2.9.19/etc/\nsudo cp *.conf* /etc/snort\nsudo cp *.map /etc/snort\nsudo cp *.dtd /etc/snort\ncd ~/snort-2.9.19/src/dynamic-preprocessors/build/usr/local/lib/snort_dynamicpreprocessor/\nsudo cp * /usr/local/lib/snort_dynamicpreprocessor/\n</code></pre>\n<p>修改 Snort 配置：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo gedit /etc/snort/snort.conf\n</code></pre>\n<ul>\n<li>\n<p>修改局域网配置：</p>\n<pre class=\"highlight\"><code class=\"plain\"># Setup the network addresses you are protecting\nipvar HOME_NET 192.168.40.0/24\n</code></pre>\n</li>\n<li>\n<p>修改文件路径：</p>\n<pre class=\"highlight\"><code class=\"plain\"># Path to your rules files (this can be a relative path)\n# Note for Windows users:  You are advised to make this an absolute path,\n# such as:  c:\\snort\\rules\nvar RULE_PATH /etc/snort/rules\nvar SO_RULE_PATH /etc/snort/so_rules\nvar PREPROC_RULE_PATH /etc/snort/preproc_rules\n\n# If you are using reputation preprocessor set these\n# Currently there is a bug with relative paths, they are relative to where snort is\n# not relative to snort.conf like the above variables\n# This is completely inconsistent with how other vars work, BUG 89986\n# Set the absolute path appropriately\nvar WHITE_LIST_PATH /etc/snort/rules/iplists\nvar BLACK_LIST_PATH /etc/snort/rules/iplists\n</code></pre>\n</li>\n<li>\n<p>注释内置的规则：</p>\n<pre class=\"highlight\"><code class=\"plain\"># include $RULE_PATH/app-detect.rules\n# include $RULE_PATH/attack-responses.rules\n# include $RULE_PATH/backdoor.rules\n# include $RULE_PATH/bad-traffic.rules\n# include $RULE_PATH/blacklist.rules\n# include $RULE_PATH/botnet-cnc.rules\n# include $RULE_PATH/browser-chrome.rules\n# include $RULE_PATH/browser-firefox.rules\n# include $RULE_PATH/browser-ie.rules\n# include $RULE_PATH/browser-other.rules\n# include $RULE_PATH/browser-plugins.rules\n# include $RULE_PATH/browser-webkit.rules\n# include $RULE_PATH/chat.rules\n# include $RULE_PATH/content-replace.rules\n# include $RULE_PATH/ddos.rules\n# include $RULE_PATH/dns.rules\n# include $RULE_PATH/dos.rules\n# include $RULE_PATH/experimental.rules\n# include $RULE_PATH/exploit-kit.rules\n# include $RULE_PATH/exploit.rules\n# include $RULE_PATH/file-executable.rules\n# include $RULE_PATH/file-flash.rules\n# include $RULE_PATH/file-identify.rules\n# include $RULE_PATH/file-image.rules\n# include $RULE_PATH/file-multimedia.rules\n# include $RULE_PATH/file-office.rules\n# include $RULE_PATH/file-other.rules\n# include $RULE_PATH/file-pdf.rules\n# include $RULE_PATH/finger.rules\n# include $RULE_PATH/ftp.rules\n# include $RULE_PATH/icmp-info.rules\n# include $RULE_PATH/icmp.rules\n# include $RULE_PATH/imap.rules\n# include $RULE_PATH/indicator-compromise.rules\n# include $RULE_PATH/indicator-obfuscation.rules\n# include $RULE_PATH/indicator-shellcode.rules\n# include $RULE_PATH/info.rules\n# include $RULE_PATH/malware-backdoor.rules\n# include $RULE_PATH/malware-cnc.rules\n# include $RULE_PATH/malware-other.rules\n# include $RULE_PATH/malware-tools.rules\n# include $RULE_PATH/misc.rules\n# include $RULE_PATH/multimedia.rules\n# include $RULE_PATH/mysql.rules\n# include $RULE_PATH/netbios.rules\n# include $RULE_PATH/nntp.rules\n# include $RULE_PATH/oracle.rules\n# include $RULE_PATH/os-linux.rules\n# include $RULE_PATH/os-other.rules\n# include $RULE_PATH/os-solaris.rules\n# include $RULE_PATH/os-windows.rules\n# include $RULE_PATH/other-ids.rules\n# include $RULE_PATH/p2p.rules\n# include $RULE_PATH/phishing-spam.rules\n# include $RULE_PATH/policy-multimedia.rules\n# include $RULE_PATH/policy-other.rules\n# include $RULE_PATH/policy.rules\n# include $RULE_PATH/policy-social.rules\n# include $RULE_PATH/policy-spam.rules\n# include $RULE_PATH/pop2.rules\n# include $RULE_PATH/pop3.rules\n# include $RULE_PATH/protocol-finger.rules\n# include $RULE_PATH/protocol-ftp.rules\n# include $RULE_PATH/protocol-icmp.rules\n# include $RULE_PATH/protocol-imap.rules\n# include $RULE_PATH/protocol-pop.rules\n# include $RULE_PATH/protocol-services.rules\n# include $RULE_PATH/protocol-voip.rules\n# include $RULE_PATH/pua-adware.rules\n# include $RULE_PATH/pua-other.rules\n# include $RULE_PATH/pua-p2p.rules\n# include $RULE_PATH/pua-toolbars.rules\n# include $RULE_PATH/rpc.rules\n# include $RULE_PATH/rservices.rules\n# include $RULE_PATH/scada.rules\n# include $RULE_PATH/scan.rules\n# include $RULE_PATH/server-apache.rules\n# include $RULE_PATH/server-iis.rules\n# include $RULE_PATH/server-mail.rules\n# include $RULE_PATH/server-mssql.rules\n# include $RULE_PATH/server-mysql.rules\n# include $RULE_PATH/server-oracle.rules\n# include $RULE_PATH/server-other.rules\n# include $RULE_PATH/server-webapp.rules\n# include $RULE_PATH/shellcode.rules\n# include $RULE_PATH/smtp.rules\n# include $RULE_PATH/snmp.rules\n# include $RULE_PATH/specific-threats.rules\n# include $RULE_PATH/spyware-put.rules\n# include $RULE_PATH/sql.rules\n# include $RULE_PATH/telnet.rules\n# include $RULE_PATH/tftp.rules\n# include $RULE_PATH/virus.rules\n# include $RULE_PATH/voip.rules\n# include $RULE_PATH/web-activex.rules\n# include $RULE_PATH/web-attacks.rules\n# include $RULE_PATH/web-cgi.rules\n# include $RULE_PATH/web-client.rules\n# include $RULE_PATH/web-coldfusion.rules\n# include $RULE_PATH/web-frontpage.rules\n# include $RULE_PATH/web-iis.rules\n# include $RULE_PATH/web-misc.rules\n# include $RULE_PATH/web-php.rules\n# include $RULE_PATH/x11.rules\n</code></pre>\n</li>\n</ul>\n<p>配置测试用规则：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo gedit /etc/snort/rules/local.rules\n</code></pre>\n<ul>\n<li>\n<p>监控 ICMP 报文：</p>\n<pre class=\"highlight\"><code class=\"plain\">alert icmp any any -&gt; $HOME_NET any (msg:&quot;ICMP Test detected!!!&quot;; classtype:icmp-event; sid:10000001; rev:001; GID:1; )\n</code></pre>\n</li>\n<li>\n<p>测试配置：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo snort -A console -q -u snort -g snort -c /etc/snort/snort.conf -i ens33\n</code></pre>\n</li>\n</ul>\n<p>在 Windows 物理机 ping 虚拟机：</p>\n<img src=\"/assets/images/buaa-security/snort/install-2.jpg\" width=\"70%\" />\n<p>在虚拟机观察到结果：</p>\n<img src=\"/assets/images/buaa-security/snort/install-3.png\" width=\"85%\" />\n<h3 id=\"安装与配置-barnyard2\"><a class=\"markdownIt-Anchor\" href=\"#安装与配置-barnyard2\"></a> 安装与配置 Barnyard2</h3>\n<p>更新包管理器并安装 Barnyard2 依赖的包：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo apt-get update\nsudo apt-get install -y mysql-server libmysqlclient-dev mysql-client autoconf libtool\n</code></pre>\n<p>解压 Barnyard2 并编译安装：</p>\n<pre class=\"highlight\"><code class=\"plain\">unzip barnyard2-master.zip\ncd barnyard2-master\nautoreconf -fvi -I ./m4\nsudo ln -s /usr/include/dumbnet.h /usr/include/dnet.h\nsudo ldconfig\n./configure --with-mysql --with-mysql-libraries=/usr/lib/x86_64-linux-gnu\nmake\nsudo make install\n</code></pre>\n<p>如果不出意外，会遇到以下问题，可修改 Barnyard2 源码解决，见<a href=\"https://blog.csdn.net/qq_45944626/article/details/121840844\">此博客</a>：</p>\n<pre class=\"highlight\"><code class=\"plain\">spo_alert_fwsam.c:118:13: error: two or more data types in declaration specifiers\n  118 | typedef int SOCKET;\n      |             ^~~~~~\n\nIn file included from spo_database.c:103:\n../output-plugins/spo_database.h:360:5: error: unknown type name ‘my_bool’\n  360 |     my_bool mysql_reconnect; /* We will handle it via the api. */\n      |     ^~~~~~~\n</code></pre>\n<p>复制配置文件：</p>\n<pre class=\"highlight\"><code class=\"plain\">cd ~/barnyard2-master\nsudo cp etc/barnyard2.conf /etc/snort\nsudo mkdir /var/log/barnyard2\nsudo chown snort.snort /var/log/barnyard2\nsudo touch /var/log/snort/barnyard2.waldo\nsudo chown snort.snort /var/log/snort/barnyard2.waldo\n</code></pre>\n<p>配置 MySQL 并为 Barnyard2 创建账户：</p>\n<pre class=\"highlight\"><code class=\"plain\">create database snort;\nuse snort;\nsource /home/chenrt/barnyard2-master/schemas/create_mysql;\ncreate user 'snort'@'localhost' identified by 'password';\ngrant create, insert, select, delete, update on snort.* to 'snort'@'localhost';\n</code></pre>\n<p>在 Linux 下如果使用了 MariaDB，且 Barnyard2 版本为 2.1.13，会出现以下问题，原因是列名和保留字冲突，处理见<a href=\"https://www.linuxquestions.org/questions/slackware-14/barnyard2-setup-4175616443/\">此问题</a>：</p>\n<pre class=\"highlight\"><code class=\"plain\">ERROR 1064 (42000) at line 53 in file: '/usr/src/create_mysql': You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ref_system_id INT UNSIGNED NOT NULL, ref_ta...' at line 2\nERROR 1064 (42000) at line 58 in file: '/usr/src/create_mysql': You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'ref_system_id INT UNSIGNED NOT NULL AUTO_INCREMENT, ...' at line 1\n</code></pre>\n<p>配置 Snort 以适应 Barnyard2：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo gedit /etc/snort/snort.conf\n</code></pre>\n<ul>\n<li>\n<p>修改输出文件的配置：</p>\n<pre class=\"highlight\"><code class=\"plain\"># unified2\n# Recommended for most installs\n# output unified2: filename merged.log, limit 128, nostamp, mpls_event_types, vlan_event_types\noutput unified2: filename snort.u2, limit 128\n</code></pre>\n</li>\n</ul>\n<p>配置 Barnyard2 以连接 SQL：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo gedit /etc/snort/barnyard2.conf\n</code></pre>\n<ul>\n<li>\n<p>修改用户名和密码：</p>\n<pre class=\"highlight\"><code class=\"plain\">output database: log, mysql, user=snort password=password dbname=snort host=localhost\n</code></pre>\n</li>\n<li>\n<p>修改配置文件权限：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo chmod o-r /etc/snort/barnyard2.conf\n</code></pre>\n</li>\n</ul>\n<p>配置 Barnyard2 以读取 Snort 的输出：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo gedit /etc/snort/sid-msg.map\n</code></pre>\n<ul>\n<li>\n<p>写入以下内容：</p>\n<pre class=\"highlight\"><code class=\"plain\">1 || 10000001 || 001 || icmp-event || 0 || ICMP Test detected || url,tools.ietf.org/html/rfc792\n</code></pre>\n</li>\n</ul>\n<p>启动 Snort 和 Barnyard2 测试：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo snort -q -u snort -g snort -c /etc/snort/snort.conf -i ens33\n</code></pre>\n<pre class=\"highlight\"><code class=\"plain\">sudo barnyard2 -c /etc/snort/barnyard2.conf -d /var/log/snort -f snort.u2 -w /var/log/snort/barnyard2.waldo -g snort -u snort\n</code></pre>\n<p>在 Windows 物理机 ping 虚拟机，Snort 的 log 文件如下：</p>\n<img src=\"/assets/images/buaa-security/snort/install-4.png\" width=\"85%\" />\n<p>数据库被 Barnyard2 更新：</p>\n<img src=\"/assets/images/buaa-security/snort/install-5.png\" width=\"85%\" />\n<h3 id=\"安装与配置-base\"><a class=\"markdownIt-Anchor\" href=\"#安装与配置-base\"></a> 安装与配置 BASE</h3>\n<p>配置 Apache2 和 PHP 5.6 环境：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo apt-get install -y apache2\nsudo add-apt-repository ppa:ondrej/php\nsudo apt-get update\nsudo apt-get install -y libapache2-mod-php5.6 php5.6 php5.6-common php5.6-gd php5.6-cli php5.6-xml php5.6-mysql\nsudo apt-get install -y php-pear libphp-adodb\n</code></pre>\n<p>Apache2 安装成功：</p>\n<img src=\"/assets/images/buaa-security/snort/install-6.png\" width=\"85%\" />\n<p>PHP 5.6 安装成功：</p>\n<img src=\"/assets/images/buaa-security/snort/install-7.png\" width=\"85%\" />\n<p>PHP 安装 BASE 依赖的包：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo pear config-set preferred_state alpha\nsudo pear channel-update pear.php.net\nsudo pear install --alldeps Image_Color Image_Canvas Image_Graph\n</code></pre>\n<p>调整 PHP 的配置：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo gedit /etc/php/5.6/apache2/php.ini\n</code></pre>\n<ul>\n<li>\n<p>修改报错条件：</p>\n<pre class=\"highlight\"><code class=\"plain\">error_reporting = E_ALL &amp; ~E_NOTICE\n</code></pre>\n</li>\n</ul>\n<p>调整 Apache 配置：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo gedit /etc/apache2/apache2.conf\n</code></pre>\n<ul>\n<li>\n<p>修改 BASE 目录的规则：</p>\n<pre class=\"highlight\"><code class=\"plain\">&lt;Directory /var/www/html/base&gt;\n  AllowOverride All\n  Require all granted\n&lt;/Directory&gt;\n</code></pre>\n</li>\n</ul>\n<p>重启 Apache 服务：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo service apache2 restart\n</code></pre>\n<p>解压 BASE 到 Apache 目录，并配置权限：</p>\n<pre class=\"highlight\"><code class=\"plain\">tar -xzvf base-1.4.5.tar.gz\nsudo mv base-1.4.5 /var/www/html/base\nsudo chown -R www-data:www-data /var/www/html/base\nsudo chmod o+w /var/www/html/base\nsudo service apache2 restart\n</code></pre>\n<p>访问 localhost，在初始化配置时被卡在第二步，报错是数据库无法连接：</p>\n<img src=\"/assets/images/buaa-security/snort/install-8.png\" width=\"85%\" />\n<p>网上死活找不到资料，于是翻出源码，打开 adodb 的 debug 模式：</p>\n<img src=\"/assets/images/buaa-security/snort/install-9.png\" width=\"85%\" />\n<p>根据报错发现原因在于新版 MySQL 调整了密码的 Hash 算法，修改如下，参考了<a href=\"https://www.jianshu.com/p/f235813c3c3a\">此博客</a>：</p>\n<ul>\n<li>\n<p>在 <code>/etc/mysql/my.cnf</code> 中添加：</p>\n<pre class=\"highlight\"><code class=\"plain\">[mysqld]\ndefault_authentication_plugin=mysql_native_password\n</code></pre>\n</li>\n<li>\n<p>在 MySQL 中设置：</p>\n<pre class=\"highlight\"><code class=\"plain\">ALTER USER 'snort'@'localhost' IDENTIFIED BY 'password' PASSWORD EXPIRE NEVER;\nALTER USER 'snort'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';\nFLUSH PRIVILEGES;\n</code></pre>\n</li>\n<li>\n<p>重启 MySQL 服务：</p>\n<pre class=\"highlight\"><code class=\"plain\">service mysql restart\n</code></pre>\n</li>\n</ul>\n<p>可正常初始化配置：</p>\n<img src=\"/assets/images/buaa-security/snort/install-10.png\" width=\"85%\" />\n<h3 id=\"测试-snort-barnyard2-base\"><a class=\"markdownIt-Anchor\" href=\"#测试-snort-barnyard2-base\"></a> 测试 Snort + Barnyard2 + BASE</h3>\n<p>参考<a href=\"https://www.wangan.com/docs/1117\">此文档</a>，在入侵检测模式下配置两条规则，分别检测大小异常的 ICMP 报文和 DoS 攻击：</p>\n<pre class=\"highlight\"><code class=\"plain\">sudo gedit /etc/snort/rules/local.rules\n</code></pre>\n<ul>\n<li>\n<p>具体配置为：</p>\n<pre class=\"highlight\"><code class=\"plain\">alert icmp any any -&gt; $HOME_NET any (msg:&quot;ICMP pkt too big&quot;; classtype:icmp-event; dsize:&gt;200; sid:10000001; rev:001; GID:1; )\nalert tcp any any -&gt; $HOME_NET any (msg:&quot;flood attack&quot;; flags:S; threshold:type both,track by_dst,count 3,seconds 10; classtype:misc-attack; sid:10000003; rev:001; GID:1; )\n</code></pre>\n</li>\n</ul>\n<p>在 Windows 物理机发送过大的 ICMP 报文：</p>\n<img src=\"/assets/images/buaa-security/snort/test-1.jpg\" width=\"70%\" />\n<p>在 Kali Linux 虚拟机发起 DoS 攻击：</p>\n<img src=\"/assets/images/buaa-security/snort/test-2.png\" width=\"85%\" />\n<p>在 BASE 中观察到上述攻击被检测：</p>\n<img src=\"/assets/images/buaa-security/snort/test-3.png\" width=\"85%\" />\n<img src=\"/assets/images/buaa-security/snort/test-4.png\" width=\"85%\" />\n","length":"2.2k","time":"11min","categories":["Buaa","Security"],"tags":["Snort","Barnyard2","PHP"]}