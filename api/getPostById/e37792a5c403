{"id":"e37792a5c403","title":"面向对象设计与构造第四单元博客作业","created":"2021-06-22T14:41:30.000Z","updated":"2021-06-22T14:41:30.000Z","raw":"<p>[迁移自博客园] | BUAA Object Oriented 2021 Unit4 Summary</p>\n<span id=\"more\"></span>\n<h2 id=\"第一次作业总结\"><a class=\"markdownIt-Anchor\" href=\"#第一次作业总结\"></a> 第一次作业总结</h2>\n<h3 id=\"作业架构设计简述\"><a class=\"markdownIt-Anchor\" href=\"#作业架构设计简述\"></a> 作业架构设计简述</h3>\n<img src=\"/assets/images/buaa-oo/unit4/hw1-uml.png\" width=\"25%\" />\n<p>建立一个公共的 Reader 类，对每类 UML 对象建立一个从 id 到对象的 Map 以供其它类使用，在 MyUmlInteraction 中进行初始化，过程分下面三步：</p>\n<ul>\n<li>初始化全部类和接口，建立从类名到类的 Map 并使用 List 解决重名问题。</li>\n<li>将属性和方法加入类，将参数加入方法。</li>\n<li>初始化全部继承关联和接口实现。</li>\n</ul>\n<p>按照逻辑组织层次化架构：</p>\n<ul>\n<li>类中储存父亲的引用，属性列表和方法列表。</li>\n<li>接口中储存父亲的引用列表，属性列表和方法列表。</li>\n<li>方法中存储输入参数列表和返回参数。</li>\n<li>实现一个 NullAblePair 用于方法的判重。</li>\n</ul>\n<p>本地测试发现时间是绰绰有余的，因此回答询问时没有设置缓存。</p>\n<h3 id=\"基于度量的作业程序结构分析\"><a class=\"markdownIt-Anchor\" href=\"#基于度量的作业程序结构分析\"></a> 基于度量的作业程序结构分析</h3>\n<ul>\n<li>\n<p>代码规模统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/hw1-line.png\" />\n</li>\n<li>\n<p>类复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/hw1-class.png\" width=\"22%\" />\n</li>\n<li>\n<p>方法复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/hw1-method.png\" width=\"40%\" />\n</li>\n</ul>\n<h3 id=\"数据生成策略设计与实现\"><a class=\"markdownIt-Anchor\" href=\"#数据生成策略设计与实现\"></a> 数据生成策略设计与实现</h3>\n<ul>\n<li>\n<p>架构设计简述：</p>\n<blockquote>\n<p>写作业也就图一乐，真有意思还得看造数据。</p>\n</blockquote>\n<p>不经过 MDJ 直接构造数据的难度和工作量较大，考虑到时间有限笔者使用 Java 实现，在架构设计方面笔者借鉴了操作系统的设计思想，设置了内核和外壳两部分并提供了“系统调用”，内核为 Model，其维护了若干 UmlElements 的子类用于对数据的合法性提供实时检验，其对外提供的方法包括：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addClass</span><span class=\"hljs-params\">(String id, String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addInterface</span><span class=\"hljs-params\">(String id, String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addOperation</span><span class=\"hljs-params\">(String pid, String id, String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addAttribute</span><span class=\"hljs-params\">(String pid, String id, String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addGeneralization</span><span class=\"hljs-params\">(String src, String dst)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">hasPath</span><span class=\"hljs-params\">(String src, String dst)</span>;\n<span class=\"hljs-keyword\">public</span> HashMap&lt;String, UmlClass&gt; <span class=\"hljs-title function_\">getClassIdMap</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> HashMap&lt;String, UmlInterface&gt; <span class=\"hljs-title function_\">getInterfaceIdMap</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> HashMap&lt;String, UmlAttribute&gt; <span class=\"hljs-title function_\">getAttributeMap</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> HashMap&lt;String, UmlOperation&gt; <span class=\"hljs-title function_\">getOperationIdMap</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> ArrayList&lt;String&gt; <span class=\"hljs-title function_\">getClassIdList</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> ArrayList&lt;String&gt; <span class=\"hljs-title function_\">getInterfaceIdList</span><span class=\"hljs-params\">()</span>;\n</code></pre>\n<p>ModelBuilder 实例化了一个内核，对外提供若干“系统调用”如下，它对传入的参数进行了简化，如 createClass 时不需要提供 id 等信息，createAssociation 将自动产生两个 AssociateEnd 和一个 Association 而对外透明：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">canGeneralization</span><span class=\"hljs-params\">(String src, String dst)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createClass</span><span class=\"hljs-params\">(String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createInterface</span><span class=\"hljs-params\">(String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createOperation</span><span class=\"hljs-params\">(String pid, String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createAttribute</span><span class=\"hljs-params\">(String pid, String name, String type)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createParameter</span><span class=\"hljs-params\">(String pid, String name, String type, String direction)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createGeneralization</span><span class=\"hljs-params\">(String src, String dst)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createAssociation</span><span class=\"hljs-params\">(String end1Ref, String end2Ref)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createInterfaceRealization</span><span class=\"hljs-params\">(String src, String dst)</span>;\n<span class=\"hljs-keyword\">public</span> NameMaker <span class=\"hljs-title function_\">getNameMaker</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> Model <span class=\"hljs-title function_\">getModel</span><span class=\"hljs-params\">()</span>;\n</code></pre>\n<p>此外转换为 json 格式也在 ModelBuilder 类中调用 create 方法时自动完成：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">idPair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">parentPair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">typePair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">namePair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">visibilityPair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">paraTypePair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">directionPair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">sourcePair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">targetPair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">end1Pair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">end2Pair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">referencePair</span><span class=\"hljs-params\">(String rhs)</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">multiplicityPair</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">private</span> Pair&lt;String, String&gt; <span class=\"hljs-title function_\">aggregationPair</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">toJson</span><span class=\"hljs-params\">(LinkedList&lt;Pair&lt;String, String&gt;&gt; info)</span>;\n</code></pre>\n<p>RandomUml 和 HandMadeUml 是两个外壳，分别实例化了 ModelBuilder 用于构造 UML 图，NameMaker 类，CommandDumper 类和 GenerateInfo 类作为公用的类，分别提供随机的各种数据，输出询问和指定生成的 UML 的各项参数。</p>\n</li>\n<li>\n<p>正确性测试：</p>\n<p>依赖于 RandomUml，在 GenerateInfo 维护以下参数：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">GenerateInfo</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> classCount, <span class=\"hljs-type\">int</span> interfaceCount, <span class=\"hljs-type\">int</span> operationCount,\n                <span class=\"hljs-type\">int</span> associationCount, <span class=\"hljs-type\">int</span> realizationCount, <span class=\"hljs-type\">int</span> attributeCount,\n                <span class=\"hljs-type\">int</span> parameterCount, <span class=\"hljs-type\">boolean</span> sameParameter, <span class=\"hljs-type\">boolean</span> wrongParameter,\n                <span class=\"hljs-type\">boolean</span> sameName, <span class=\"hljs-type\">boolean</span> interfaceExtendMore)</span> &#123;\n    <span class=\"hljs-built_in\">this</span>.classCount = classCount;\n    <span class=\"hljs-built_in\">this</span>.interfaceCount = interfaceCount;\n    <span class=\"hljs-built_in\">this</span>.operationCount = operationCount;\n    <span class=\"hljs-built_in\">this</span>.associationCount = associationCount;\n    <span class=\"hljs-built_in\">this</span>.realizationCount = realizationCount;\n    <span class=\"hljs-built_in\">this</span>.attributeCount = attributeCount;\n    <span class=\"hljs-built_in\">this</span>.parameterCount = parameterCount;\n    <span class=\"hljs-built_in\">this</span>.sameParameter = sameParameter;\n    <span class=\"hljs-built_in\">this</span>.wrongParameter = wrongParameter;\n    <span class=\"hljs-built_in\">this</span>.sameName = sameName;\n    <span class=\"hljs-built_in\">this</span>.extendMore = interfaceExtendMore;\n&#125;\n</code></pre>\n<p>再采用下面的参数进行随机：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">atomGenerate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">boolean</span> sameName)</span> &#123;\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>,<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, sameName, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, sameName, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>,<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, sameName, <span class=\"hljs-literal\">false</span>));\n&#125;\n\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">extremeGenerate</span><span class=\"hljs-params\">()</span> &#123;\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">60</span>,<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">250</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">60</span>, <span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">60</span>, <span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>));\n&#125;\n\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">groupGenerate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> tot)</span> &#123;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">size</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">30</span>; size &lt;= <span class=\"hljs-number\">1000</span>; size *= <span class=\"hljs-number\">3</span>) &#123;\n        sameSize = size;\n        atomGenerate(<span class=\"hljs-literal\">true</span>);\n    &#125;\n    atomGenerate(<span class=\"hljs-literal\">false</span>);\n    extremeGenerate();\n&#125;\n</code></pre>\n</li>\n<li>\n<p>非正确性测试：</p>\n<p>依赖于 HandMadeUml，手工构造包含长链和完全图等的数据，采用下面的数据卡掉了全部查询实现接口时没有去重的代码，和笔者对拍的代码死了一大半：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">makeMultiExtend</span><span class=\"hljs-params\">()</span> &#123;\n    builder.createClass(<span class=\"hljs-string\">&quot;class0&quot;</span>);\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">101</span>; i++) &#123;\n        builder.createInterface(<span class=\"hljs-string\">&quot;interface&quot;</span> + i);\n    &#125;\n    ArrayList&lt;String&gt; classes = builder.getModel().getClassIdList();\n    ArrayList&lt;String&gt; interfaces = builder.getModel().getInterfaceIdList();\n    builder.createInterfaceRealization(classes.get(<span class=\"hljs-number\">0</span>), interfaces.get(<span class=\"hljs-number\">0</span>));\n    builder.createInterfaceRealization(classes.get(<span class=\"hljs-number\">0</span>), interfaces.get(<span class=\"hljs-number\">1</span>));\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">98</span>; i++) &#123;\n        builder.createGeneralization(interfaces.get(i), interfaces.get((i &gt;&gt; <span class=\"hljs-number\">1</span> &lt;&lt; <span class=\"hljs-number\">1</span>) + <span class=\"hljs-number\">2</span>));\n        builder.createGeneralization(interfaces.get(i), interfaces.get((i &gt;&gt; <span class=\"hljs-number\">1</span> &lt;&lt; <span class=\"hljs-number\">1</span>) + <span class=\"hljs-number\">3</span>));\n    &#125;\n    dumper.startQuery();\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">200</span>; i++) &#123;\n        dumper.createImplementInterList(<span class=\"hljs-string\">&quot;class0&quot;</span>);\n    &#125;\n&#125;\n</code></pre>\n</li>\n<li>\n<p>测试强度评估：</p>\n<p>采用统计代码关键位置触发次数的方式评估，设置如下，经测试生成的数据实现了全覆盖：</p>\n<pre class=\"highlight\"><code class=\"c++\"><span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> *s[] = &#123;\n    <span class=\"hljs-string\">&quot;data error : same element id&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong id in generalization&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong id in interface realization&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong id in association&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong parent id in attribute&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong parent id in operation&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong parent id in parameter&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : multi father in class&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : self extend in class&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : circle extend in interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;self association in class&quot;</span>,\n    <span class=\"hljs-string\">&quot;zero in operation size&quot;</span>,\n    <span class=\"hljs-string\">&quot;more than one in operation size&quot;</span>,\n    <span class=\"hljs-string\">&quot;null father in attribute size&quot;</span>,\n    <span class=\"hljs-string\">&quot;zero in attribute size&quot;</span>,\n    <span class=\"hljs-string\">&quot;more than one in attribute size&quot;</span>,\n    <span class=\"hljs-string\">&quot;calculated father in attribute size&quot;</span>,\n    <span class=\"hljs-string\">&quot;rhombus extend in interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;no father in interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;one father in interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;multi father in interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;multi parameter with same type&quot;</span>,\n    <span class=\"hljs-string\">&quot;class not found in get operation count&quot;</span>,\n    <span class=\"hljs-string\">&quot;class not found in get attribute count&quot;</span>,\n    <span class=\"hljs-string\">&quot;class not found in get operation visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;class not found in get attribute visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;class not found in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;class not found in get operation param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;class not found in get associated list&quot;</span>,\n    <span class=\"hljs-string\">&quot;class not found in get top parent&quot;</span>,\n    <span class=\"hljs-string\">&quot;class not found in get implement list&quot;</span>,\n    <span class=\"hljs-string\">&quot;class not found in get not hidden&quot;</span>,\n    <span class=\"hljs-string\">&quot;class more than one in get operation count&quot;</span>,\n    <span class=\"hljs-string\">&quot;class more than one in get attribute count&quot;</span>,\n    <span class=\"hljs-string\">&quot;class more than one in get operation visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;class more than one in get attribute visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;class more than one in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;class more than one in get operation param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;class more than one in get associated list&quot;</span>,\n    <span class=\"hljs-string\">&quot;class more than one in get top parent&quot;</span>,\n    <span class=\"hljs-string\">&quot;class more than one in get implement list&quot;</span>,\n    <span class=\"hljs-string\">&quot;class more than one in get not hidden&quot;</span>,\n    <span class=\"hljs-string\">&quot;null father in attribute in get attribute visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;attribute more than one in get attribute visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;attribute not found in get attribute visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;calculate father when find attribute in get attribute visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;null father in attribute in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;attribute more than one in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;attribute not found in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;calculate father when find attribute in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;checked null type in get return param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;right named type in get return param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;wrong named type in get return param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;class reference type in get return param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;interface reference type in get return param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;wrong reference type in get return param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;right named type in get other param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;wrong named type in get other param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;class reference type in get other param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;interface reference type in get other param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;wrong reference type in get other param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;right named type in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;wrong named type in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;class reference type in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;interface reference type in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;wrong reference type in get attribute type&quot;</span>,\n    <span class=\"hljs-string\">&quot;empty operation in get operation visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;not all type in get operation visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;all type in get operation visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;succeed in get attribute visibility&quot;</span>,\n    <span class=\"hljs-string\">&quot;null father in associate list&quot;</span>,\n    <span class=\"hljs-string\">&quot;equal class in get associated list&quot;</span>,\n    <span class=\"hljs-string\">&quot;calculated father in get associated list&quot;</span>,\n    <span class=\"hljs-string\">&quot;null father in get top father&quot;</span>,\n    <span class=\"hljs-string\">&quot;has father in get top father&quot;</span>,\n    <span class=\"hljs-string\">&quot;null father in get implement list&quot;</span>,\n    <span class=\"hljs-string\">&quot;calculated father in get implement list&quot;</span>,\n    <span class=\"hljs-string\">&quot;null father in get information not hidden&quot;</span>,\n    <span class=\"hljs-string\">&quot;calculated father in get information not hidden&quot;</span>,\n    <span class=\"hljs-string\">&quot;contains same in get param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;empty operation in get param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;more than one operation in get param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;one operation in get param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;double exception in get param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;succeed in get param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;empty return value in operation&quot;</span>,\n    <span class=\"hljs-string\">&quot;empty other value in operation&quot;</span>,\n    <span class=\"hljs-string\">&quot;return same but diff in get param type&quot;</span>,\n    <span class=\"hljs-string\">&quot;parameters same but diff in get param type&quot;</span>\n&#125;;\n</code></pre>\n</li>\n</ul>\n<h3 id=\"数据生成器分析\"><a class=\"markdownIt-Anchor\" href=\"#数据生成器分析\"></a> 数据生成器分析</h3>\n<ul>\n<li>\n<p>类关系图：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen1-uml.png\" width=\"45%\" />\n</li>\n<li>\n<p>代码规模统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen1-line.png\" />\n</li>\n<li>\n<p>类复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen1-class.png\" width=\"22%\" />\n</li>\n<li>\n<p>方法复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen1-method.png\" width=\"45%\" />\n</li>\n</ul>\n<h2 id=\"第二次作业总结\"><a class=\"markdownIt-Anchor\" href=\"#第二次作业总结\"></a> 第二次作业总结</h2>\n<h3 id=\"作业架构设计简述-2\"><a class=\"markdownIt-Anchor\" href=\"#作业架构设计简述-2\"></a> 作业架构设计简述</h3>\n<img src=\"/assets/images/buaa-oo/unit4/hw2-uml.png\" width=\"65%\" />\n<p>建立一个公共的 Reader 类，对每类 UML 对象建立一个从 id 到对象的 Map 以供其它类使用，在 MyUmlGeneralInteraction 中实例化下面三个类并将询问分发：</p>\n<ul>\n<li><code>MyUmlClassInteraction</code>。</li>\n<li><code>MyUmlStateChartInteraction</code>。</li>\n<li><code>MyUmlCollaborationInteraction</code>。</li>\n</ul>\n<p>在 MyUmlClassInteraction 中进行类图初始化，分下面三步：</p>\n<ul>\n<li>初始化全部类和接口，建立从类名到类的 Map 并使用 List 解决重名问题。</li>\n<li>将属性和方法加入类，将参数加入方法。</li>\n<li>初始化全部继承关联和接口实现。</li>\n</ul>\n<p>在 MyUmlStateChartInteraction 中进行状态图初始化，分下面三步：</p>\n<ul>\n<li>初始化全部状态机，建立从状态机名到状态机的 Map 并使用 List 解决重名问题。</li>\n<li>将三种状态加入对应的状态机，将转移加入状态。</li>\n<li>将事件和不透明行为加入转移。</li>\n</ul>\n<p>在 MyUmlCollaborationInteraction 中进行顺序图初始化，分下面两步：</p>\n<ul>\n<li>初始化全部交互，建立从交互名到交互的 Map 并使用 List 解决重名问题。</li>\n<li>将生命线加入交互，将消息加入生命线。</li>\n</ul>\n<p>按照逻辑组织层次化架构：</p>\n<ul>\n<li>类中储存父亲的引用，属性列表和方法列表。</li>\n<li>接口中储存父亲的引用列表，属性列表和方法列表。</li>\n<li>方法中存储输入参数列表和返回参数。</li>\n<li>实现一个 NullAblePair 用于方法的判重。</li>\n<li>交互中存储生命线列表。</li>\n<li>生命线中存储收到和发出消息的两个列表。</li>\n<li>状态机存储起始结束状态和其它状态列表。</li>\n<li>状态中存储其直接对端集合到对应转移列表的 Map。</li>\n<li>状态转移中存储事件列表和不透明行为列表。</li>\n</ul>\n<p>本地测试发现时间是绰绰有余的，因此回答询问时没有设置缓存。</p>\n<h3 id=\"基于度量的作业程序结构分析-2\"><a class=\"markdownIt-Anchor\" href=\"#基于度量的作业程序结构分析-2\"></a> 基于度量的作业程序结构分析</h3>\n<ul>\n<li>\n<p>代码规模统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/hw2-line.png\" />\n</li>\n<li>\n<p>类复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/hw2-class.png\" width=\"25%\" />\n</li>\n<li>\n<p>方法复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/hw2-method.png\" width=\"40%\" />\n</li>\n</ul>\n<h3 id=\"数据生成策略设计与实现-2\"><a class=\"markdownIt-Anchor\" href=\"#数据生成策略设计与实现-2\"></a> 数据生成策略设计与实现</h3>\n<ul>\n<li>\n<p>架构设计简述：</p>\n<blockquote>\n<p>写作业也就图一乐，真有意思还得看造数据。</p>\n</blockquote>\n<p>内核为 ClassModel，TransModel 和 MessageModel，分别维护了若干 UmlElements 的子类用于对数据的合法性提供实时检验，TransModel 和 MessageModel 对外提供的方法包括：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addStartState</span><span class=\"hljs-params\">(String pid, String id)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addFinalState</span><span class=\"hljs-params\">(String pid, String id)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addNormalState</span><span class=\"hljs-params\">(String pid, String id, String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addTransition</span><span class=\"hljs-params\">(String pid, String id, String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addRegion</span><span class=\"hljs-params\">(String pid, String id)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addStateMachine</span><span class=\"hljs-params\">(String id, String name)</span>;\n<span class=\"hljs-keyword\">public</span> HashMap&lt;String, UmlState&gt; <span class=\"hljs-title function_\">getStateIdMap</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> HashMap&lt;String, UmlStateMachine&gt; <span class=\"hljs-title function_\">getStateMachineIdMap</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> HashMap&lt;String, UmlTransition&gt; <span class=\"hljs-title function_\">getTransitionIdMap</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> ArrayList&lt;String&gt; <span class=\"hljs-title function_\">getMachineIdList</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> ArrayList&lt;String&gt; <span class=\"hljs-title function_\">getStateIdList</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> ArrayList&lt;String&gt; <span class=\"hljs-title function_\">getTransitionIdList</span><span class=\"hljs-params\">()</span>;\n</code></pre>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addInteraction</span><span class=\"hljs-params\">(String id, String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addLifeline</span><span class=\"hljs-params\">(String pid, String id, String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">addEndPoint</span><span class=\"hljs-params\">(String pid, String id, String name)</span>;\n<span class=\"hljs-keyword\">public</span> HashMap&lt;String, UmlLifeline&gt; <span class=\"hljs-title function_\">getLifelineIdMap</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> HashMap&lt;String, UmlInteraction&gt; <span class=\"hljs-title function_\">getInteractionIdMap</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> ArrayList&lt;String&gt; <span class=\"hljs-title function_\">getLifelineIdList</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> ArrayList&lt;String&gt; <span class=\"hljs-title function_\">getInteractionIdList</span><span class=\"hljs-params\">()</span>;\n</code></pre>\n<p>ModelBuilder 实例化了三个内核，对外提供若干“系统调用”如下（已隐藏重复内容），它对传入的参数进行了简化，如 createMachine 时不需要提供 region 相关的信息，函数将会自动创建 region，createState 也只要提供 stateMachine 的 id，函数将会自动转换为 region 的 id 而对外透明：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">canGeneralization</span><span class=\"hljs-params\">(String src, String dst)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createClass</span><span class=\"hljs-params\">(String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createInterface</span><span class=\"hljs-params\">(String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createOperation</span><span class=\"hljs-params\">(String pid, String name)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createAttribute</span><span class=\"hljs-params\">(String pid, String name, String type)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createParameter</span><span class=\"hljs-params\">(String pid, String name, String type, String direction)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createGeneralization</span><span class=\"hljs-params\">(String src, String dst)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createAssociation</span><span class=\"hljs-params\">(String end1Ref, String end2Ref)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">createInterfaceRealization</span><span class=\"hljs-params\">(String src, String dst)</span>;\n<span class=\"hljs-keyword\">public</span> NameMaker <span class=\"hljs-title function_\">getNameMaker</span><span class=\"hljs-params\">()</span>;\n<span class=\"hljs-keyword\">public</span> Model <span class=\"hljs-title function_\">getModel</span><span class=\"hljs-params\">()</span>;\n</code></pre>\n<p>此外转换为 json 格式依旧在 ModelBuilder 类中调用 create 方法时自动完成。</p>\n<p>RandomUml 和 HandMadeUml 是两个外壳，分别实例化了 ModelBuilder 用于构造 UML 图，NameMaker 类，CommandDumper 类和 GenerateInfo 类作为公用的类，分别提供随机的各种数据，输出询问和指定生成的 UML 的各项参数。</p>\n<p>对 RandomUml 进行了拆分和细化，将构造覆盖性询问提取出来封装到了 CoverQuery 类。</p>\n</li>\n<li>\n<p>正确性测试：</p>\n<p>依赖于 RandomUml，在 GenerateInfo 维护以下参数：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">GenerateInfo</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> classCount, <span class=\"hljs-type\">int</span> interfaceCount, <span class=\"hljs-type\">int</span> operationCount,\n                    <span class=\"hljs-type\">int</span> associationCount, <span class=\"hljs-type\">int</span> realizationCount, <span class=\"hljs-type\">int</span> attributeCount,\n                    <span class=\"hljs-type\">int</span> parameterCount, <span class=\"hljs-type\">boolean</span> sameParameter, <span class=\"hljs-type\">boolean</span> wrongParameter,\n                    <span class=\"hljs-type\">boolean</span> sameName, <span class=\"hljs-type\">boolean</span> interfaceExtendMore, <span class=\"hljs-type\">int</span> machineCount,\n                    <span class=\"hljs-type\">int</span> interactionCount, <span class=\"hljs-type\">boolean</span> messageMore, <span class=\"hljs-type\">int</span> lifelineCount,\n                    <span class=\"hljs-type\">int</span> endPointCount, <span class=\"hljs-type\">int</span> stateCount, <span class=\"hljs-type\">int</span> eventCount, <span class=\"hljs-type\">int</span> behaviorCount,\n                    <span class=\"hljs-type\">boolean</span> transitionMore)</span> &#123;\n    <span class=\"hljs-built_in\">this</span>.classCount = classCount;\n    <span class=\"hljs-built_in\">this</span>.interfaceCount = interfaceCount;\n    <span class=\"hljs-built_in\">this</span>.operationCount = operationCount;\n    <span class=\"hljs-built_in\">this</span>.associationCount = associationCount;\n    <span class=\"hljs-built_in\">this</span>.realizationCount = realizationCount;\n    <span class=\"hljs-built_in\">this</span>.attributeCount = attributeCount;\n    <span class=\"hljs-built_in\">this</span>.parameterCount = parameterCount;\n    <span class=\"hljs-built_in\">this</span>.sameParameter = sameParameter;\n    <span class=\"hljs-built_in\">this</span>.wrongParameter = wrongParameter;\n    <span class=\"hljs-built_in\">this</span>.sameName = sameName;\n    <span class=\"hljs-built_in\">this</span>.extendMore = interfaceExtendMore;\n    <span class=\"hljs-built_in\">this</span>.machineCount = machineCount;\n    <span class=\"hljs-built_in\">this</span>.interactionCount = interactionCount;\n    <span class=\"hljs-built_in\">this</span>.messageMore = messageMore;\n    <span class=\"hljs-built_in\">this</span>.lifelineCount = lifelineCount;\n    <span class=\"hljs-built_in\">this</span>.endPointCount = endPointCount;\n    <span class=\"hljs-built_in\">this</span>.stateCount = stateCount;\n    <span class=\"hljs-built_in\">this</span>.eventCount = eventCount;\n    <span class=\"hljs-built_in\">this</span>.behaviorCount = behaviorCount;\n    <span class=\"hljs-built_in\">this</span>.transitionMore = transitionMore;\n&#125;\n</code></pre>\n<p>再采用下面的参数进行随机：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">atomGenerate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">boolean</span> sameName)</span> &#123;\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, sameName, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, sameName, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, sameName, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">27</span>, <span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">35</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">5</span>, <span class=\"hljs-literal\">false</span>));\n&#125;\n\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">extremeGenerate</span><span class=\"hljs-params\">()</span> &#123;\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">60</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">250</span>, <span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">65</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">65</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>));\n&#125;\n\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">groupGenerate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> tot)</span> &#123;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">size</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">30</span>; size &lt;= <span class=\"hljs-number\">1000</span>; size *= <span class=\"hljs-number\">3</span>) &#123;\n        sameSize = size;\n        atomGenerate(<span class=\"hljs-literal\">true</span>);\n    &#125;\n    atomGenerate(<span class=\"hljs-literal\">false</span>);\n    extremeGenerate();\n&#125;\n</code></pre>\n</li>\n<li>\n<p>非正确性测试：</p>\n<p>依赖于 HandMadeUml，手工构造包含长链和完全图等的数据，包含前一次 HandMadeUml 中的全部内容，下面为构造一个状态转移长链的函数，不过这次作业中和笔者对拍的代码全部没有出现性能问题：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">makeLongTrans</span><span class=\"hljs-params\">()</span> &#123;\n    builder.createMachine(<span class=\"hljs-string\">&quot;machine0&quot;</span>);\n    ArrayList&lt;String&gt; machines = builder.getTransModel().getMachineIdList();\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">199</span>; i++) &#123;\n        builder.createState(machines.get(<span class=\"hljs-number\">0</span>), <span class=\"hljs-string\">&quot;state&quot;</span> + i, <span class=\"hljs-number\">0</span>);\n    &#125;\n    ArrayList&lt;String&gt; states = builder.getTransModel().getStateIdList();\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">198</span>; i++) &#123;\n        builder.createTransition(machines.get(<span class=\"hljs-number\">0</span>), <span class=\"hljs-string\">&quot;&quot;</span>, states.get(i), states.get(i + <span class=\"hljs-number\">1</span>));\n    &#125;\n    dumper.startQuery();\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">300</span>; i++) &#123;\n        dumper.createSubsequentState(<span class=\"hljs-string\">&quot;machine0&quot;</span>, <span class=\"hljs-string\">&quot;state0&quot;</span>);\n    &#125;\n&#125;\n</code></pre>\n</li>\n<li>\n<p>测试强度评估：</p>\n<p>采用统计代码关键位置触发次数的方式评估，设置如下（已隐藏重复内容），经测试生成的数据实现了全覆盖：</p>\n<pre class=\"highlight\"><code class=\"c++\"><span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> *s[] = &#123;\n    <span class=\"hljs-string\">&quot;data error : wrong parent id in lifeline&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong id in message&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong id in find state machine&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong id in find region&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong source id in add transition&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong target id in add transition&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : source is end in add transition&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : target is begin in add transition&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong id in add event&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : wrong id in add opaque behavior&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : one event to different transition&quot;</span>,\n    <span class=\"hljs-string\">&quot;data error : same name in get trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;contain self message&quot;</span>,\n    <span class=\"hljs-string\">&quot;contain lifeline to lifeline&quot;</span>,\n    <span class=\"hljs-string\">&quot;contain lifeline to endpoint&quot;</span>,\n    <span class=\"hljs-string\">&quot;contain endpoint to lifeline&quot;</span>,\n    <span class=\"hljs-string\">&quot;contain endpoint to endpoint&quot;</span>,\n    <span class=\"hljs-string\">&quot;self transition in add transition&quot;</span>,\n    <span class=\"hljs-string\">&quot;zero in incoming message&quot;</span>,\n    <span class=\"hljs-string\">&quot;more than one in incoming message&quot;</span>,\n    <span class=\"hljs-string\">&quot;normal in incoming message&quot;</span>,\n    <span class=\"hljs-string\">&quot;more than one in sent message&quot;</span>,\n    <span class=\"hljs-string\">&quot;normal in sent message&quot;</span>,\n    <span class=\"hljs-string\">&quot;all zero in incoming message&quot;</span>,\n    <span class=\"hljs-string\">&quot;sort zero in incoming message&quot;</span>,\n    <span class=\"hljs-string\">&quot;zero in transition trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;more than one in transition trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;machine not found in get state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;machine not found in get subsequent state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;machine not found in get transition trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;interaction not found in get participant count&quot;</span>,\n    <span class=\"hljs-string\">&quot;interaction not found in get incoming message count&quot;</span>,\n    <span class=\"hljs-string\">&quot;interaction not found in get sent message count&quot;</span>,\n    <span class=\"hljs-string\">&quot;lifeline not found in get incoming message&quot;</span>,\n    <span class=\"hljs-string\">&quot;lifeline not found in get sent message&quot;</span>,\n    <span class=\"hljs-string\">&quot;state not found in get subsequent state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;state not found in get src state in get trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;state not found in get dst state in get trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;machine more than one in get state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;machine more than one in get subsequent state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;machine more than one in get transition trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;interaction more than one in get participant count&quot;</span>,\n    <span class=\"hljs-string\">&quot;interaction more than one in get incoming message count&quot;</span>,\n    <span class=\"hljs-string\">&quot;interaction more than one in get sent message count&quot;</span>,\n    <span class=\"hljs-string\">&quot;lifeline more than one in get incoming message&quot;</span>,\n    <span class=\"hljs-string\">&quot;lifeline more than one in get sent message&quot;</span>,\n    <span class=\"hljs-string\">&quot;state more than one in get subsequent state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;state more than one in get src state in get trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;state more than one in get dst state in get trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;zero in participant count&quot;</span>,\n    <span class=\"hljs-string\">&quot;more than one in participant count&quot;</span>,\n    <span class=\"hljs-string\">&quot;normal in participant count&quot;</span>,\n    <span class=\"hljs-string\">&quot;zero in state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;more than one in state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;normal in state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;transition not found in get trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;multi trans in get trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;single trans in get trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;zero trigger in get trigger&quot;</span>,\n    <span class=\"hljs-string\">&quot;zero in subsequent state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;more than direct in subsequent state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;normal in subsequent state count&quot;</span>\n&#125;;\n</code></pre>\n</li>\n</ul>\n<h3 id=\"数据生成器分析-2\"><a class=\"markdownIt-Anchor\" href=\"#数据生成器分析-2\"></a> 数据生成器分析</h3>\n<ul>\n<li>\n<p>类关系图：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen2-uml.png\" width=\"78%\" />\n</li>\n<li>\n<p>代码规模统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen2-line.png\" />\n</li>\n<li>\n<p>类复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen2-class.png\" width=\"25%\" />\n</li>\n<li>\n<p>方法复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen2-method.png\" width=\"50%\" />\n</li>\n</ul>\n<h2 id=\"第三次作业总结\"><a class=\"markdownIt-Anchor\" href=\"#第三次作业总结\"></a> 第三次作业总结</h2>\n<h3 id=\"作业架构设计简述-3\"><a class=\"markdownIt-Anchor\" href=\"#作业架构设计简述-3\"></a> 作业架构设计简述</h3>\n<img src=\"/assets/images/buaa-oo/unit4/hw3-uml.png\" width=\"70%\" />\n<p>沿用之前的 Reader 类，并在此类中完成 R005 的检查。在 MyUmlGeneralInteraction 中实例化下面三个类并将检查和询问分发：</p>\n<ul>\n<li><code>MyUmlClassInteraction</code>。</li>\n<li><code>MyUmlStateChartInteraction</code>。</li>\n<li><code>MyUmlCollaborationInteraction</code>。</li>\n</ul>\n<p>在 MyUmlClassInteraction 中进行类图初始化和检查：</p>\n<ul>\n<li>初始化 MyUmlClassInteraction 的步骤和第二次作业一致。</li>\n<li>在 MyUmlClassInteraction 中完成 R001、R002、R003、R004、R006 的检查。</li>\n</ul>\n<p>在 MyUmlStateChartInteraction 中进行状态图初始化和检查：</p>\n<ul>\n<li>初始化 MyUmlStateChartInteraction 的步骤和第二次作业一致。</li>\n<li>在 MyUmlStateChartInteraction 中完成 R008 的检查。</li>\n</ul>\n<p>在 MyUmlCollaborationInteraction 中进行顺序图初始化和检查：</p>\n<ul>\n<li>初始化 MyUmlCollaborationInteraction 的步骤和第二次作业一致。</li>\n<li>在 MyUmlCollaborationInteraction 中完成 R007 的检查。</li>\n</ul>\n<p>本地测试发现时间是绰绰有余的，因此回答询问时没有设置缓存。</p>\n<h3 id=\"基于度量的作业程序结构分析-3\"><a class=\"markdownIt-Anchor\" href=\"#基于度量的作业程序结构分析-3\"></a> 基于度量的作业程序结构分析</h3>\n<ul>\n<li>\n<p>代码规模统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/hw3-line.png\" />\n</li>\n<li>\n<p>类复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/hw3-class.png\" width=\"35%\" />\n</li>\n<li>\n<p>方法复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/hw3-method.png\" width=\"55%\" />\n</li>\n</ul>\n<h3 id=\"数据生成策略设计与实现-3\"><a class=\"markdownIt-Anchor\" href=\"#数据生成策略设计与实现-3\"></a> 数据生成策略设计与实现</h3>\n<ul>\n<li>\n<p>架构设计简述：</p>\n<blockquote>\n<p>写作业也就图一乐，真有意思还得看造数据。</p>\n</blockquote>\n<p>内核依旧为 ClassModel，TransModel 和 MessageModel，分别维护了若干 UmlElements 的子类用于对数据的合法性提供实时检验，下面对部分异常进行说明：</p>\n<ul>\n<li>R002 异常：\n<ul>\n<li>搜索 dst 是否可达 src。</li>\n<li>可达则添加 src 到 dst 必 R002。</li>\n</ul>\n</li>\n<li>R003 异常：\n<ul>\n<li>分别维护类和接口的并查集。</li>\n<li>检查 src 和 dst 在对应的并查集中是否已连接。</li>\n<li>已连接则添加 src 到 dst 必存在全是类或全是接口的无向环，从而 R003。</li>\n</ul>\n</li>\n<li>R004 异常：\n<ul>\n<li>维护一个类和接口的总并查集。</li>\n<li>检查 src 和 dst 在上述并查集中是否已连接。</li>\n<li>已连接则添加 src 到 dst 必存在由类或接口构成的无向环，从而 R004。</li>\n</ul>\n</li>\n</ul>\n<p>ModelBuilder 实例化了三个内核，对外提供若干“系统调用”如下（已隐藏重复内容），相比上一次作业它主要增加了异常处理功能，是对上述三个内核中方法的进一步封装：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">hasFather</span><span class=\"hljs-params\">(String src)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">canGeneralizeWithoutR2</span><span class=\"hljs-params\">(String src, String dst)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">canGeneralizeWithoutR3</span><span class=\"hljs-params\">(String src, String dst)</span>;\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">canRealizeWithoutR4</span><span class=\"hljs-params\">(String src, String dst)</span>;\n</code></pre>\n<p>与上一次作业不同的是 HandMadeUml 被改名为 RightHandMade，新增了一个类 WrongHandMade 用于手工构造错误的数据。</p>\n</li>\n<li>\n<p>正确性测试：</p>\n<p>依赖于 RandomUml，在 GenerateInfo 维护以下参数：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] ALL_RIGHT =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] ROO1_WRONG =&#123;<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] ROO2_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] ROO3_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] ROO4_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] ROO5_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] ROO6_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] ROO7_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] ROO8_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] MIX_OO1_WRONG =&#123;<span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] MIX_OO2_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] MIX_OO3_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] MIX_OO4_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] MIX_OO5_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] MIX_OO6_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>&#125;;\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[] MIX_OO7_WRONG =&#123;<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>&#125;;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">boolean</span>[][] ALL_WRONG = &#123;\n    ROO1_WRONG, ROO2_WRONG, ROO3_WRONG, ROO4_WRONG,\n    ROO5_WRONG, ROO6_WRONG, ROO7_WRONG, ROO8_WRONG,\n    MIX_OO1_WRONG, MIX_OO2_WRONG, MIX_OO3_WRONG, MIX_OO4_WRONG,\n    MIX_OO5_WRONG, MIX_OO6_WRONG, MIX_OO7_WRONG\n&#125;;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">GenerateInfo</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> classCount, <span class=\"hljs-type\">int</span> interfaceCount, <span class=\"hljs-type\">int</span> operationCount,\n                    <span class=\"hljs-type\">int</span> associationCount, <span class=\"hljs-type\">int</span> realizationCount, <span class=\"hljs-type\">int</span> attributeCount,\n                    <span class=\"hljs-type\">int</span> parameterCount, <span class=\"hljs-type\">boolean</span> sameParameter, <span class=\"hljs-type\">boolean</span> wrongParameter,\n                    <span class=\"hljs-type\">boolean</span> sameName, <span class=\"hljs-type\">int</span> machineCount, <span class=\"hljs-type\">int</span> interactionCount,\n                    <span class=\"hljs-type\">boolean</span> messageMore, <span class=\"hljs-type\">int</span> lifelineCount, <span class=\"hljs-type\">int</span> endPointCount,\n                    <span class=\"hljs-type\">int</span> stateCount, <span class=\"hljs-type\">int</span> eventCount, <span class=\"hljs-type\">int</span> behaviorCount,\n                    <span class=\"hljs-type\">boolean</span> transitionMore, <span class=\"hljs-type\">boolean</span>[] wrongVector)</span> &#123;\n    <span class=\"hljs-built_in\">this</span>.classCount = classCount;\n    <span class=\"hljs-built_in\">this</span>.interfaceCount = interfaceCount;\n    <span class=\"hljs-built_in\">this</span>.operationCount = operationCount;\n    <span class=\"hljs-built_in\">this</span>.associationCount = associationCount;\n    <span class=\"hljs-built_in\">this</span>.realizationCount = realizationCount;\n    <span class=\"hljs-built_in\">this</span>.attributeCount = attributeCount;\n    <span class=\"hljs-built_in\">this</span>.parameterCount = parameterCount;\n    <span class=\"hljs-built_in\">this</span>.sameParameter = sameParameter;\n    <span class=\"hljs-built_in\">this</span>.wrongParameter = wrongParameter;\n    <span class=\"hljs-built_in\">this</span>.sameName = sameName;\n    <span class=\"hljs-built_in\">this</span>.machineCount = machineCount;\n    <span class=\"hljs-built_in\">this</span>.interactionCount = interactionCount;\n    <span class=\"hljs-built_in\">this</span>.messageMore = messageMore;\n    <span class=\"hljs-built_in\">this</span>.lifelineCount = lifelineCount;\n    <span class=\"hljs-built_in\">this</span>.endPointCount = endPointCount;\n    <span class=\"hljs-built_in\">this</span>.stateCount = stateCount;\n    <span class=\"hljs-built_in\">this</span>.eventCount = eventCount;\n    <span class=\"hljs-built_in\">this</span>.behaviorCount = behaviorCount;\n    <span class=\"hljs-built_in\">this</span>.transitionMore = transitionMore;\n    <span class=\"hljs-built_in\">this</span>.wrongVector = wrongVector;\n&#125;\n</code></pre>\n<p>再采用下面的参数进行随机：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">rightGenerate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">boolean</span> sameName)</span> &#123;\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">false</span>, sameName,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>, sameName,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-literal\">true</span>, sameName,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName,<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">27</span>, <span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName,<span class=\"hljs-number\">35</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName,<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">5</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n&#125;\n\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">wrongGenerate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">boolean</span> sameName, <span class=\"hljs-type\">boolean</span>[] errorVector)</span> &#123;\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, errorVector));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, errorVector));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName,<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">27</span>, <span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, errorVector));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, sameName,<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">5</span>, <span class=\"hljs-literal\">false</span>, errorVector));\n&#125;\n\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">extremeGenerateRight</span><span class=\"hljs-params\">()</span> &#123;\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">60</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">250</span>, <span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">65</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">80</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, GenerateInfo.ALL_RIGHT));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, GenerateInfo.ALL_RIGHT));\n&#125;\n\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">extremeGenerateWrong</span><span class=\"hljs-params\">(<span class=\"hljs-type\">boolean</span>[] errorVector)</span> &#123;\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, errorVector));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">250</span>, <span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">true</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, errorVector));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, errorVector));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">75</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">false</span>, errorVector));\n    <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RandomUml</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">GenerateInfo</span>(<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-literal\">false</span>,<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>, <span class=\"hljs-literal\">true</span>, errorVector));\n&#125;\n\n<span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">groupGenerate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> tot)</span> &#123;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">size</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">30</span>; size &lt;= <span class=\"hljs-number\">1000</span>; size *= <span class=\"hljs-number\">3</span>) &#123;\n        sameSize = size;\n        rightGenerate(<span class=\"hljs-literal\">true</span>);\n    &#125;\n    rightGenerate(<span class=\"hljs-literal\">false</span>);\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">boolean</span>[] i : GenerateInfo.ALL_WRONG) &#123;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">size</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">30</span>; size &lt;= <span class=\"hljs-number\">1000</span>; size *= <span class=\"hljs-number\">3</span>) &#123;\n            sameSize = size;\n            wrongGenerate(<span class=\"hljs-literal\">true</span>, i);\n        &#125;\n        wrongGenerate(<span class=\"hljs-literal\">false</span>, i);\n    &#125;\n    extremeGenerateRight();\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">boolean</span>[] i : GenerateInfo.ALL_WRONG) &#123;\n        extremeGenerateWrong(i);\n    &#125;\n&#125;\n</code></pre>\n</li>\n<li>\n<p>非正确性测试：</p>\n<p>依赖于 RightHandMade，和前一次 HandMadeUml 中的内容完全一致，依赖于 WrongHandMade，手工构造包含错误的长链和完全图等的数据，下面为构造一个完全循环继承图的函数，卡掉了一份写出锅的 Tarjan 算法：</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">makeInterfaceFullCircle</span><span class=\"hljs-params\">()</span> &#123;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">19</span>; i++) &#123;\n        builder.createInterface(<span class=\"hljs-string\">&quot;interface&quot;</span> + i);\n    &#125;\n    ArrayList&lt;String&gt; interfaces = builder.getClassModel().getInterfaceIdList();\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">19</span>; i++) &#123;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-number\">19</span>; j++) &#123;\n            builder.createGeneralization(interfaces.get(i), interfaces.get(j));\n        &#125;\n    &#125;\n    dumper.startQuery();\n    dumper.createClassOpCount(<span class=\"hljs-string\">&quot;R002&quot;</span>);\n&#125;\n</code></pre>\n</li>\n<li>\n<p>测试强度评估：</p>\n<p>采用统计代码关键位置触发次数的方式评估，设置如下（已隐藏重复内容），经测试生成的数据实现了全覆盖：</p>\n<pre class=\"highlight\"><code class=\"c++\"><span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> *s[] = &#123;\n    <span class=\"hljs-string\">&quot;implement already exists&quot;</span>,\n    <span class=\"hljs-string\">&quot;implement interface name same&quot;</span>,\n    <span class=\"hljs-string\">&quot;self generalization in class&quot;</span>,\n    <span class=\"hljs-string\">&quot;self generalization in interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;interface extend already exists&quot;</span>,\n    <span class=\"hljs-string\">&quot;associate to class&quot;</span>,\n    <span class=\"hljs-string\">&quot;associate to interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;association already exists&quot;</span>,\n    <span class=\"hljs-string\">&quot;self associate with same name&quot;</span>,\n    <span class=\"hljs-string\">&quot;self associate with diff name&quot;</span>,\n    <span class=\"hljs-string\">&quot;attribute to class&quot;</span>,\n    <span class=\"hljs-string\">&quot;attribute to interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;has cross name same&quot;</span>,\n    <span class=\"hljs-string\">&quot;has attribute name same&quot;</span>,\n    <span class=\"hljs-string\">&quot;has associate name same&quot;</span>,\n    <span class=\"hljs-string\">&quot;has circle of class&quot;</span>,\n    <span class=\"hljs-string\">&quot;has circle of interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;not in circle but father in circle&quot;</span>,\n    <span class=\"hljs-string\">&quot;has not public in interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;has multi extend&quot;</span>,\n    <span class=\"hljs-string\">&quot;has direct multi implement&quot;</span>,\n    <span class=\"hljs-string\">&quot;has indirect multi implement&quot;</span>,\n    <span class=\"hljs-string\">&quot;null attribute in add lifeline&quot;</span>,\n    <span class=\"hljs-string\">&quot;wrong attribute in add lifeline&quot;</span>,\n    <span class=\"hljs-string\">&quot;succeed in add lifeline&quot;</span>,\n    <span class=\"hljs-string\">&quot;has null in represent&quot;</span>,\n    <span class=\"hljs-string\">&quot;normal in subsequent state count&quot;</span>,\n    <span class=\"hljs-string\">&quot;no state in check initial state&quot;</span>,\n    <span class=\"hljs-string\">&quot;no next state in initial state&quot;</span>,\n    <span class=\"hljs-string\">&quot;diff next state more than one in initial state&quot;</span>,\n    <span class=\"hljs-string\">&quot;same next state more than one in initial state&quot;</span>,\n    <span class=\"hljs-string\">&quot;guard null with empty trigger in check transition&quot;</span>,\n    <span class=\"hljs-string\">&quot;guard null with not empty trigger in check transition&quot;</span>,\n    <span class=\"hljs-string\">&quot;guard not null with empty trigger in check transition&quot;</span>,\n    <span class=\"hljs-string\">&quot;null name in uml association&quot;</span>,\n    <span class=\"hljs-string\">&quot;null name in uml association end&quot;</span>,\n    <span class=\"hljs-string\">&quot;null name in uml attribute&quot;</span>,\n    <span class=\"hljs-string\">&quot;null name in uml class&quot;</span>,\n    <span class=\"hljs-string\">&quot;null name in uml generalization&quot;</span>,\n    <span class=\"hljs-string\">&quot;null name in uml interface&quot;</span>,\n    <span class=\"hljs-string\">&quot;null name in uml interface realization&quot;</span>,\n    <span class=\"hljs-string\">&quot;null name in uml operation&quot;</span>,\n    <span class=\"hljs-string\">&quot;null name in uml parameter&quot;</span>\n&#125;;\n</code></pre>\n</li>\n</ul>\n<h3 id=\"数据生成器分析-3\"><a class=\"markdownIt-Anchor\" href=\"#数据生成器分析-3\"></a> 数据生成器分析</h3>\n<ul>\n<li>\n<p>类关系图：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen3-uml.png\" width=\"100%\" />\n</li>\n<li>\n<p>代码规模统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen3-line.png\" />\n</li>\n<li>\n<p>类复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen3-class.png\" width=\"25%\" />\n</li>\n<li>\n<p>方法复杂度统计：</p>\n<img src=\"/assets/images/buaa-oo/unit4/gen3-method.png\" width=\"55%\" />\n</li>\n</ul>\n<h2 id=\"uml-对象部分字段解释\"><a class=\"markdownIt-Anchor\" href=\"#uml-对象部分字段解释\"></a> UML 对象部分字段解释</h2>\n<ul>\n<li>\n<p>类图 | UMLClass</p>\n<ul>\n<li>parent 字段：指向父亲的 id，注意与继承区别。</li>\n<li>id 字段：唯一的 id，可能被其它 UML 对象指向。</li>\n<li>name 字段：不一定唯一的名字，询问或回答询问时将用到。</li>\n<li>visibility 字段：对象的可见性。</li>\n</ul>\n</li>\n<li>\n<p>类图 | UMLInterface</p>\n<ul>\n<li>parent 字段：指向父亲的 id，注意与继承区别。</li>\n<li>id 字段：唯一的 id，可能被其它 UML 对象指向。</li>\n<li>name 字段：不一定唯一的名字，询问或回答询问时将用到。</li>\n<li>visibility 字段：对象的可见性。</li>\n</ul>\n</li>\n<li>\n<p>类图 | UMLAttribute</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲可能是 UMLClass 或 UMLInterface。</li>\n<li>id 字段：唯一的 id。</li>\n<li>name 字段：不一定唯一的名字，询问或回答询问时将用到。</li>\n<li>visibility 字段：对象的可见性。</li>\n<li>type 字段：对象的类型，可能是直接类型或引用类型。</li>\n</ul>\n</li>\n<li>\n<p>类图 | UMLOperation</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲可能是 UMLClass 或 UMLInterface。</li>\n<li>id 字段：唯一的 id，可能被 UMLParameter 指向。</li>\n<li>name 字段：不一定唯一的名字，询问或回答询问时将用到。</li>\n<li>visibility 字段：对象的可见性。</li>\n</ul>\n</li>\n<li>\n<p>类图 | UMLParameter</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLOperation。</li>\n<li>id 字段：唯一的 id。</li>\n<li>name 字段：不一定唯一的名字，回答询问时将用到。</li>\n<li>type 字段：对象的类型，可能是直接类型或引用类型。</li>\n<li>direction 字段：对象的方向。</li>\n</ul>\n</li>\n<li>\n<p>类图 | UMLAssociation</p>\n<ul>\n<li>parent 字段：指向父亲的 id，不过没啥用。</li>\n<li>id 字段：唯一的 id，被 UMLAssociationEnd 对象指向。</li>\n<li>name 字段：不知道是否有唯一的名字，反正没啥用。</li>\n<li>end1 字段：指向第一个 UMLAssociationEnd 的 id。</li>\n<li>end2 字段：指向第二个 UMLAssociationEnd 的 id。</li>\n</ul>\n</li>\n<li>\n<p>类图 | UMLAssociationEnd</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLAssociation。</li>\n<li>id 字段：唯一的 id，被 UMLAssociation 对象指向。</li>\n<li>name 字段：不一定唯一的名字，检查异常的时候将用到。</li>\n<li>reference 字段：指向存在此对端的类的 id。</li>\n<li>multiplicity 字段：对象的多样性。</li>\n<li>visibility 字段：对象的可见性。</li>\n<li>aggregation 字段：对象的聚合性。</li>\n</ul>\n</li>\n<li>\n<p>类图 | UMLGeneralization</p>\n<ul>\n<li>parent 字段：指向父亲的 id，不过没啥用。</li>\n<li>id 字段：唯一的 id。</li>\n<li>name 字段：不知道是否有唯一的名字，反正没啥用。</li>\n<li>source 字段：指向继承父类的子类 id。</li>\n<li>target 字段：指向被子类实现的父类的 id。</li>\n</ul>\n</li>\n<li>\n<p>类图 | UMLInterfaceRealization</p>\n<ul>\n<li>parent 字段：指向父亲的 id，不过没啥用。</li>\n<li>id 字段：唯一的 id。</li>\n<li>name 字段：不知道是否有唯一的名字，反正没啥用。</li>\n<li>source 字段：指向实现接口的类的 id。</li>\n<li>target 字段：指向被类实现的接口的 id。</li>\n</ul>\n</li>\n<li>\n<p>顺序图 | UMLInteraction</p>\n<ul>\n<li>parent 字段：指向父亲的 id，和下属 UMLLifeline 对应的 UMLAttribute 的父亲的 id 相同。</li>\n<li>id 字段：唯一的 id，可能被其它 UML 对象指向。</li>\n<li>name 字段：不一定唯一的名字，询问或回答询问时将用到。</li>\n<li>visibility 字段：对象的可见性。</li>\n</ul>\n</li>\n<li>\n<p>顺序图 | UMLLifeline</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLInteraction。</li>\n<li>id 字段：唯一的 id，可能被 UMLMessage 指向。</li>\n<li>name 字段：不一定唯一的名字，询问或回答询问时将用到。</li>\n<li>visibility 字段：对象的可见性。</li>\n<li>represent 字段：指向顺序图中的 UMLAttribute 的 id。</li>\n<li>isMultiInstance 字段：对象是否是重复实例。</li>\n</ul>\n</li>\n<li>\n<p>顺序图 | UMLAttribute</p>\n<ul>\n<li>parent 字段：指向父亲的 id，和指向其的 UMLLifeline 对应的 UMLInteraction 的父亲的 id 相同。</li>\n<li>id 字段：唯一的 id，可能被 UMLLifeline 指向。</li>\n<li>name 字段：不知道是否有唯一的名字，反正没啥用。</li>\n<li>visibility 字段：对象的可见性。</li>\n<li>type 字段：对象的类型，可能是直接类型或引用类型。</li>\n</ul>\n</li>\n<li>\n<p>顺序图 | UMLMessage</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLInteraction。</li>\n<li>id 字段：唯一的 id。</li>\n<li>name 字段：不知道是否有唯一的名字，反正没啥用。</li>\n<li>visibility 字段：对象的可见性。</li>\n<li>source 字段：指向发出消息的 UMLLifeline 或 UMLEndpoint。</li>\n<li>target 字段：指向收到消息的 UMLLifeline 或 UMLEndpoint。</li>\n<li>messageSort 字段：对象的消息类型。</li>\n</ul>\n</li>\n<li>\n<p>顺序图 | UMLEndpoint</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLInteraction。</li>\n<li>id 字段：唯一的 id，可能被 UMLMessage 指向。</li>\n<li>name 字段：不知道是否有唯一的名字，反正没啥用。</li>\n<li>visibility 字段：对象的可见性。</li>\n</ul>\n</li>\n<li>\n<p>状态图 | UMLStateMachine</p>\n<ul>\n<li>parent 字段：指向父亲的 id，不过没啥用。</li>\n<li>id 字段：唯一的 id，可能被 UMLRegion 指向。</li>\n<li>name 字段：不一定唯一的名字，询问或回答询问时将用到。</li>\n</ul>\n</li>\n<li>\n<p>状态图 | UMLRegion</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLStateMachine。</li>\n<li>id 字段：唯一的 id，可能被其它 UML 对象指向。</li>\n<li>name 字段：不知道是否有唯一的名字，反正没啥用。</li>\n<li>visibility 字段：对象的可见性。</li>\n</ul>\n</li>\n<li>\n<p>状态图 | UMLState</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLRegion。</li>\n<li>id 字段：唯一的 id，可能被 UMLTransition 指向。</li>\n<li>name 字段：不一定唯一的名字，询问或回答询问时将用到。</li>\n<li>visibility 字段：对象的可见性。</li>\n</ul>\n</li>\n<li>\n<p>状态图 | UMLPseudostate</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLRegion。</li>\n<li>id 字段：唯一的 id，可能被 UMLTransition 指向。</li>\n<li>name 字段：保证是 null 且没啥用。</li>\n<li>visibility 字段：对象的可见性。</li>\n</ul>\n</li>\n<li>\n<p>状态图 | UMLFinalState</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLRegion。</li>\n<li>id 字段：唯一的 id，可能被 UMLTransition 指向。</li>\n<li>name 字段：保证是 null 且没啥用。</li>\n<li>visibility 字段：对象的可见性。</li>\n</ul>\n</li>\n<li>\n<p>状态图 | UMLTransition</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLRegion。</li>\n<li>id 字段：唯一的 id，可能被 UMLEvent 或 UMLOpaqueBehavior 指向。</li>\n<li>name 字段：不知道是否有唯一的名字，反正没啥用。</li>\n<li>visibility 字段：对象的可见性。</li>\n<li>guard 字段：对象的警戒条件，检查异常的时候将用到。</li>\n<li>source 字段：指向状态的起始状态，是 UMLPseudostate 或 UMLState。</li>\n<li>target 字段：指向状态的目标状态，是 UMLState 或 UMLFinalState。</li>\n</ul>\n</li>\n<li>\n<p>状态图 | UMLEvent</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLTransition。</li>\n<li>id 字段：唯一的 id。</li>\n<li>name 字段：一定唯一的名字，回答询问时将用到。</li>\n<li>expression 字段：对象的表达式。</li>\n<li>visibility 字段：对象的可见性。</li>\n<li>value 字段：对象的值。</li>\n</ul>\n</li>\n<li>\n<p>状态图 | UMLOpaqueBehavior</p>\n<ul>\n<li>parent 字段：指向父亲的 id，父亲是 UMLTransition。</li>\n<li>id 字段：唯一的 id。</li>\n<li>name 字段：不知道是否有唯一的名字，反正没啥用。</li>\n<li>visibility 字段：对象的可见性。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"程序-bug-分析\"><a class=\"markdownIt-Anchor\" href=\"#程序-bug-分析\"></a> 程序 Bug 分析</h2>\n<ul>\n<li>\n<p>本地测试方式简述：</p>\n<ul>\n<li>数据生成部分如上文所述。</li>\n<li>批量测试部分直接复用上一单元的评测机。</li>\n</ul>\n</li>\n<li>\n<p>本人程序 Bug：</p>\n<ul>\n<li>本地测试还算充分，在三次强测中均没有被发现 Bug。</li>\n<li>第二次作业求后继状态时没有考虑自身，对拍时发现并修复。</li>\n<li>第二次作业误以为 EndPoint 不能发出消息只能接收消息，对拍时发现并修复。</li>\n<li>第三次作业添加 AssociationEnd 名字时写反 End1 和 End2，对拍时发现并修复。</li>\n</ul>\n</li>\n<li>\n<p>他人程序 Bug：</p>\n<ul>\n<li>三次作业中若干对 UML 模型理解出错导致的问题。</li>\n<li>第一次作业中若干查询实现接口时没有去重导致被卡出指数复杂度的问题。</li>\n<li>第三次作业中 Tarjan 算法写锅导致被卡出指数复杂度的问题。</li>\n<li>第三次作业中初始化时将父类属性添加给子类遇到循环继承出现死循环的问题。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"心得体会\"><a class=\"markdownIt-Anchor\" href=\"#心得体会\"></a> 心得体会</h2>\n<p>和上一单元一样，本单元用于测试的时间依旧是是用于实现的时间的数倍。建议增加互测，这单元一开始感觉没啥可测的，真测起来才发现暗藏杀机，这要是有互测一定可以刀的很带劲。</p>\n<p>也许可以进一步完善指导书（根据讨论区中的若干问题），包括但不限于如果两个不同的类的名字相同，两个引用类型分别指向了这两个类，那么应该根据类的名字判定引用类型相同还是根据 id 不同判定引用类型不同，这些确实有点影响体验。</p>\n<p>最后好奇下两个问题，OJ 上的运行时间似乎是本地运行时间加上约 0.7s 的偏移，这是加密输出导致的吗；以及后两次作业为啥设置十秒的 CPU 时间限制，感觉即使考虑大常数五秒也绰绰有余了。</p>\n","length":"8.9k","time":"41min","categories":["Buaa","OO"],"tags":["Java","C++"]}