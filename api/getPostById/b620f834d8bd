{"id":"b620f834d8bd","title":"为 highlight.js 增加行号支持","created":"2023-01-28T09:10:20.000Z","updated":"2023-01-28T13:56:01.000Z","raw":"<p>基于简洁考虑，highlight.js 官方没有提供行号支持，本文是我增加行号支持的过程。</p>\n<span id=\"more\"></span>\n<h2 id=\"原理说明\"><a class=\"markdownIt-Anchor\" href=\"#原理说明\"></a> 原理说明</h2>\n<p>下面是一段测试用 C++ 代码和其经过 highlight.js 处理后的结果，不难发现在 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 中的内容与处理前的代码在行号上一一对应。因而为了增加代码行号，只要遍历所有 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 包裹的内容，在每行开始加入行号即可。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> argc, <span class=\"hljs-type\">char</span> *argv[])</span> </span>&#123;\n\n  <span class=\"hljs-comment\">/* An annoying &quot;Hello World&quot; example */</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">auto</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">0xFFFF</span>; i++)\n    cout &lt;&lt; <span class=\"hljs-string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;\n\n  <span class=\"hljs-type\">char</span> c = <span class=\"hljs-string\">&#x27;\\n&#x27;</span>;\n  unordered_map &lt;string, vector&lt;string&gt; &gt; m;\n  m[<span class=\"hljs-string\">&quot;key&quot;</span>] = <span class=\"hljs-string\">&quot;\\\\\\\\&quot;</span>; <span class=\"hljs-comment\">// this is an error</span>\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-2e3</span> + <span class=\"hljs-number\">12l</span>;\n&#125;\n</code></pre>\n<pre class=\"highlight\"><code class=\"html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;highlight&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;cpp&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-meta&quot;</span>&gt;</span>#<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>include<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-string&quot;</span>&gt;</span><span class=\"hljs-symbol\">&amp;lt;</span>iostream<span class=\"hljs-symbol\">&amp;gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-function&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>int<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-title&quot;</span>&gt;</span>main<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-params&quot;</span>&gt;</span>(<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>int<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> argc, <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>char<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> *argv[])<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-symbol\">&amp;#123;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-comment&quot;</span>&gt;</span>/* An annoying <span class=\"hljs-symbol\">&amp;quot;</span>Hello World<span class=\"hljs-symbol\">&amp;quot;</span> example */<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>for<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> (<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>auto<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> i = <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-number&quot;</span>&gt;</span>0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>; i <span class=\"hljs-symbol\">&amp;lt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-number&quot;</span>&gt;</span>0xFFFF<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>; i++)\n    cout <span class=\"hljs-symbol\">&amp;lt;</span><span class=\"hljs-symbol\">&amp;lt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-string&quot;</span>&gt;</span><span class=\"hljs-symbol\">&amp;quot;</span>Hello, World!<span class=\"hljs-symbol\">&amp;quot;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-symbol\">&amp;lt;</span><span class=\"hljs-symbol\">&amp;lt;</span> endl;\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>char<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> c = <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-string&quot;</span>&gt;</span><span class=\"hljs-symbol\">&amp;#x27;</span>\\n<span class=\"hljs-symbol\">&amp;#x27;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>;\n  unordered_map <span class=\"hljs-symbol\">&amp;lt;</span>string, vector<span class=\"hljs-symbol\">&amp;lt;</span>string<span class=\"hljs-symbol\">&amp;gt;</span> <span class=\"hljs-symbol\">&amp;gt;</span> m;\n  m[<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-string&quot;</span>&gt;</span><span class=\"hljs-symbol\">&amp;quot;</span>key<span class=\"hljs-symbol\">&amp;quot;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>] = <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-string&quot;</span>&gt;</span><span class=\"hljs-symbol\">&amp;quot;</span>\\\\\\\\<span class=\"hljs-symbol\">&amp;quot;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>; <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-comment&quot;</span>&gt;</span>// this is an error<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>return<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-number&quot;</span>&gt;</span>-2e3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> + <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-number&quot;</span>&gt;</span>12l<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>;\n<span class=\"hljs-symbol\">&amp;#125;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n</code></pre>\n<h3 id=\"在行首追加行号\"><a class=\"markdownIt-Anchor\" href=\"#在行首追加行号\"></a> 在行首追加行号</h3>\n<p>具体实现上，一种简单的方式是在行首直接增加行号或增加一个包裹了行号的元素，<a href=\"https://github.com/esofar/cnblogs-theme-silence\">cnblogs-theme-silence</a> 采用了这种实现。</p>\n<h3 id=\"以表格的形式添加行号\"><a class=\"markdownIt-Anchor\" href=\"#以表格的形式添加行号\"></a> 以表格的形式添加行号</h3>\n<p>另一种实现方式是将代码块视为一个表格，表格行数为代码块行数，每行有两列，分别对应代码行号和代码内容，GitHub 采用了这种实现（这也是 <a href=\"https://github.com/Chenrt-ggx/HexoThemeNaive\">Hexo Theme Naive</a> 采用这种实现的原因，现在看来在行首追加行号可能更简单一些）。</p>\n<h2 id=\"用户体验优化\"><a class=\"markdownIt-Anchor\" href=\"#用户体验优化\"></a> 用户体验优化</h2>\n<h3 id=\"解决行号复制\"><a class=\"markdownIt-Anchor\" href=\"#解决行号复制\"></a> 解决行号复制</h3>\n<p>无论是在行首追加行号还是以表格的形式添加行号，都会存在复制代码时连同行号一起复制的问题，极大的影响用户的体验。我一直以为正解是使用 JS 监听复制事件修改复制的内容（还有一个治标不治本的在代码块中增加一个复制按钮），后来分析 GitHub 的行号显示发现可以使用伪元素实现。</p>\n<p>我们可以将 <code>&lt;td class=&quot;hljs-line-num&quot;&gt;11&lt;/td&gt;</code> 改写为 <code>&lt;td class=&quot;hljs-line-num&quot; data-line-number=&quot;11&quot;&gt;&lt;/td&gt;</code>，再如下设置样式，即可显示不可复制行号。</p>\n<pre class=\"highlight\"><code class=\"css\"><span class=\"hljs-selector-class\">.hljs-line-num</span><span class=\"hljs-selector-pseudo\">::before</span> &#123;\n  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-built_in\">attr</span>(data-line-number);\n&#125;\n</code></pre>\n<h3 id=\"解决空行复制\"><a class=\"markdownIt-Anchor\" href=\"#解决空行复制\"></a> 解决空行复制</h3>\n<p>在代码块中可能存在空行，这些空行在翻译成 HTML 后渲染自然没有问题，但在复制时会出现丢失空行的问题，<a href=\"https://github.com/wcoder/highlightjs-line-numbers.js/\">这个仓库</a>的处理方法是为空行增加一个空格，在不影响渲染的情况下解决了复制丢失问题（现在知道为啥一些网站复制出来空行多了个空格了）。</p>\n<p>为了追求完美，我们希望干掉这个空格。我同样以为正解是使用 JS 监听复制事件修改复制的内容，后来分析 GitHub 的空行处理发现只要把为空行增加一个空格改成为空行增加一个换行符 <code>\\n</code> 即可。</p>\n<h3 id=\"处理多行注释\"><a class=\"markdownIt-Anchor\" href=\"#处理多行注释\"></a> 处理多行注释</h3>\n<p>下面是一段测试用 Java 代码和其经过 highlight.js 处理后的结果，可以发现 <code>&lt;span class=&quot;hljs-comment&quot;&gt;</code> 中的内容处于多行，不利于增加行号后调整样式。</p>\n<pre class=\"highlight\"><code class=\"java\"><span class=\"hljs-comment\">/**\n * <span class=\"hljs-doctag\">@author</span> John Smith &lt;john.smith@example.com&gt;\n */</span>\n<span class=\"hljs-keyword\">package</span> l2f.gameserver.model;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">abstract</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">L2Char</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">L2Object</span> &#123;\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">Short</span> <span class=\"hljs-variable\">ERROR</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0x0001</span>;\n\n  <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">moveTo</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y, <span class=\"hljs-type\">int</span> z)</span> &#123;\n    _ai = <span class=\"hljs-literal\">null</span>;\n    log(<span class=\"hljs-string\">&quot;Should not be called&quot;</span>);\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-number\">1</span> &gt; <span class=\"hljs-number\">5</span>) &#123; <span class=\"hljs-comment\">// wtf!?</span>\n      <span class=\"hljs-keyword\">return</span>;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<pre class=\"highlight\"><code class=\"html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;highlight&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;java&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-comment&quot;</span>&gt;</span>/**\n * <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-doctag&quot;</span>&gt;</span>@author<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> John Smith <span class=\"hljs-symbol\">&amp;lt;</span>john.smith@example.com<span class=\"hljs-symbol\">&amp;gt;</span>\n */<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>package<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> l2f.gameserver.model;\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>public<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>abstract<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>class<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-title class_&quot;</span>&gt;</span>L2Char<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>extends<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-title class_&quot;</span>&gt;</span>L2Object<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-symbol\">&amp;#123;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>public<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>static<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>final<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>Short<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-variable&quot;</span>&gt;</span>ERROR<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-operator&quot;</span>&gt;</span>=<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-number&quot;</span>&gt;</span>0x0001<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>;\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>public<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>void<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-title function_&quot;</span>&gt;</span>moveTo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-params&quot;</span>&gt;</span>(<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>int<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> x, <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>int<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> y, <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>int<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> z)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-symbol\">&amp;#123;</span>\n    _ai = <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-literal&quot;</span>&gt;</span>null<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>;\n    log(<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-string&quot;</span>&gt;</span><span class=\"hljs-symbol\">&amp;quot;</span>Should not be called<span class=\"hljs-symbol\">&amp;quot;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>);\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>if<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> (<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-number&quot;</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-symbol\">&amp;gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-number&quot;</span>&gt;</span>5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>) <span class=\"hljs-symbol\">&amp;#123;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-comment&quot;</span>&gt;</span>// wtf!?<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>return<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>;\n    <span class=\"hljs-symbol\">&amp;#125;</span>\n  <span class=\"hljs-symbol\">&amp;#125;</span>\n<span class=\"hljs-symbol\">&amp;#125;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n</code></pre>\n<p>对于多行注释，无论是在行首追加行号还是以表格的形式添加行号都无法保证样式正确（现在知道为啥一些网站的多行注释样式有问题了），需要通过 JS 进行处理，将上面的代码翻译成下面的形式：</p>\n<pre class=\"highlight\"><code class=\"html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">pre</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;highlight&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;java&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-comment&quot;</span>&gt;</span>/**<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-comment&quot;</span>&gt;</span>* <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-doctag&quot;</span>&gt;</span>@author<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> John Smith <span class=\"hljs-symbol\">&amp;lt;</span>john.smith@example.com<span class=\"hljs-symbol\">&amp;gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-comment&quot;</span>&gt;</span>*/<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>package<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> l2f.gameserver.model;\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>public<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>abstract<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>class<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-title class_&quot;</span>&gt;</span>L2Char<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>extends<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-title class_&quot;</span>&gt;</span>L2Object<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-symbol\">&amp;#123;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>public<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>static<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>final<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>Short<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-variable&quot;</span>&gt;</span>ERROR<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-operator&quot;</span>&gt;</span>=<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-number&quot;</span>&gt;</span>0x0001<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>;\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>public<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>void<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-title function_&quot;</span>&gt;</span>moveTo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-params&quot;</span>&gt;</span>(<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>int<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> x, <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>int<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> y, <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-type&quot;</span>&gt;</span>int<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> z)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-symbol\">&amp;#123;</span>\n    _ai = <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-literal&quot;</span>&gt;</span>null<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>;\n    log(<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-string&quot;</span>&gt;</span><span class=\"hljs-symbol\">&amp;quot;</span>Should not be called<span class=\"hljs-symbol\">&amp;quot;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>);\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>if<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> (<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-number&quot;</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span> <span class=\"hljs-symbol\">&amp;gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-number&quot;</span>&gt;</span>5<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>) <span class=\"hljs-symbol\">&amp;#123;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-comment&quot;</span>&gt;</span>// wtf!?<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;hljs-keyword&quot;</span>&gt;</span>return<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>;\n    <span class=\"hljs-symbol\">&amp;#125;</span>\n  <span class=\"hljs-symbol\">&amp;#125;</span>\n<span class=\"hljs-symbol\">&amp;#125;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">pre</span>&gt;</span>\n</code></pre>\n<p>一个 JS 的实现如下（参考了<a href=\"https://github.com/wcoder/highlightjs-line-numbers.js/\">此仓库</a>）：</p>\n<pre class=\"highlight\"><code class=\"js\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">duplicateMultilineNodes</span> = (<span class=\"hljs-params\">element</span>) =&gt; &#123;\n  <span class=\"hljs-keyword\">const</span> nodes = element.<span class=\"hljs-property\">childNodes</span>;\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> node <span class=\"hljs-keyword\">in</span> nodes) &#123;\n    <span class=\"hljs-comment\">// eslint-disable-next-line no-prototype-builtins</span>\n    <span class=\"hljs-keyword\">if</span> (nodes.<span class=\"hljs-title function_\">hasOwnProperty</span>(node)) &#123;\n      <span class=\"hljs-keyword\">const</span> child = nodes[node];\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_\">getLinesCount</span>(child.<span class=\"hljs-property\">textContent</span>) &gt; <span class=\"hljs-number\">0</span>) &#123;\n        <span class=\"hljs-keyword\">if</span> (child.<span class=\"hljs-property\">childNodes</span>.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span>) &#123;\n          <span class=\"hljs-title function_\">duplicateMultilineNodes</span>(child);\n        &#125; <span class=\"hljs-keyword\">else</span> &#123;\n          <span class=\"hljs-title function_\">duplicateMultilineNode</span>(child.<span class=\"hljs-property\">parentNode</span>);\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n&#125;;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">duplicateMultilineNode</span> = (<span class=\"hljs-params\">element</span>) =&gt; &#123;\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-regexp\">/hljs-/</span>.<span class=\"hljs-title function_\">test</span>(element.<span class=\"hljs-property\">className</span>)) &#123;\n    <span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-title function_\">getLines</span>(element.<span class=\"hljs-property\">innerHTML</span>).<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">i</span>) =&gt;</span> &#123;\n      <span class=\"hljs-keyword\">const</span> lineText = i.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span> ? i : <span class=\"hljs-string\">&#x27;\\n&#x27;</span>;\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`&lt;span class=&quot;<span class=\"hljs-subst\">$&#123;element.className&#125;</span>&quot;&gt;<span class=\"hljs-subst\">$&#123;lineText&#125;</span>&lt;/span&gt;`</span>;\n    &#125;);\n    element.<span class=\"hljs-property\">innerHTML</span> = result.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>).<span class=\"hljs-title function_\">trim</span>();\n  &#125;\n&#125;;\n</code></pre>\n<h3 id=\"样式调教\"><a class=\"markdownIt-Anchor\" href=\"#样式调教\"></a> 样式调教</h3>\n<p>经过一些调研，包括 Sublime Text、VSCode、JetBrains 系列 IDE 和 GitHub 在内的一众代码行号显示均采用了右对齐的方式，因而 <a href=\"https://github.com/Chenrt-ggx/HexoThemeNaive\">Hexo Theme Naive</a> 也采用了这种样式。</p>\n<p>由于过长代码的横向滚动条又宽又丑，需要对样式进行优化，一个参考的方案如下：</p>\n<pre class=\"highlight\"><code class=\"css\"><span class=\"hljs-comment\">/* Chrome */</span>\n\n*::-webkit-scrollbar &#123;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">var</span>(--n-scrollbar-width);\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-built_in\">var</span>(--n-scrollbar-height);\n&#125;\n\n*::-webkit-scrollbar-thumb &#123;\n  <span class=\"hljs-attribute\">background</span>: transparent;\n  <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-built_in\">var</span>(--n-scrollbar-border-radius);\n&#125;\n\n*::-webkit-scrollbar-thumb:hover &#123;\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">var</span>(--n-scrollbar-color);\n&#125;\n\n<span class=\"hljs-comment\">/* FireFox */</span>\n\n<span class=\"hljs-selector-tag\">body</span> &#123;\n  <span class=\"hljs-attribute\">scrollbar-width</span>: thin;\n  <span class=\"hljs-attribute\">scrollbar-color</span>: <span class=\"hljs-built_in\">var</span>(--n-scrollbar-color) transparent;\n&#125;\n</code></pre>\n","length":"2.4k","time":"12min","categories":["Hexo"],"tags":["JavaScript"]}